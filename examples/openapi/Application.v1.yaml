openapi: 3.0.0
info:
  title: Application
  version: '1'
  description: ''
servers:
  - url: http://localhost:3000/v1
    description: local
  - url: https://api.prob-works.com/v1
    description: Prd
  - url: https://api-stg.prob-works.com/v1
    description: Stg
  - url: https://api-dev.prob-woks.com/v1
    description: Dev
paths:
  /accounts/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ''
    get:
      summary: アカウントを取得する
      tags:
        - Account
      responses:
        '200':
          $ref: '#/components/responses/Account'
      operationId: get-accounts-id
    patch:
      summary: アカウントを更新する
      tags:
        - Account
      responses:
        '200':
          $ref: '#/components/responses/Account'
      operationId: patch-accounts-id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    avatar:
                      type: string
                      format: binary
                    is_career_scout_target:
                      type: boolean
                      default: true
                    is_project_scout_target:
                      type: boolean
                      default: true
                    is_public_work:
                      type: boolean
                    is_student:
                      type: boolean
                      default: false
                    current_password:
                      type: string
                      description: 新パスワードを設定する時に必要
                    new_password:
                      type: string
                    new_password_confirmation:
                      type: string
                    block_company_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
    delete:
      summary: アカウントを論理削除する
      tags:
        - Account
      responses:
        '200':
          $ref: '#/components/responses/Account'
      operationId: delete-accounts-id
  /accounts/{account_id}/followings:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのフォロー一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  followings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
                  total_data_nums:
                    type: integer
      operationId: get-accounts-account_id-following
    post:
      summary: アカウントのフォローを作成する
      operationId: post-accounts-account_id-following
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                following:
                  type: object
                  properties:
                    company_id:
                      type: string
                      format: uuid
                  required:
                    - company_id
  /accounts/{account_id}/rooms:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのトークルーム一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Rooms'
      operationId: get-accounts-account_id-rooms
  /accounts/{account_id}/notifications:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの通知一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/AccountNotifications'
      operationId: get-accounts-account_id-notifications
      parameters:
        - schema:
            type: string
            enum:
              - general
              - message
          in: query
          name: notification_type
        - schema:
            type: boolean
          in: query
          name: is_read
  /accounts/{account_id}/search_conditions:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの検索条件一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/SearchConditions'
      operationId: get-accounts-account_id-search_conditions
      parameters:
        - schema:
            type: string
          in: query
          name: company_id
          description: その企業の検索条件一覧を返す
        - schema:
            type: string
            example: recruitment
          in: query
          name: target
          description: ターゲット
    post:
      summary: アカウントの検索条件を作成
      operationId: post-companies-company_id-search_conditions
      responses:
        '200':
          $ref: '#/components/responses/SearchCondition'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                search_condition:
                  type: object
                  properties:
                    title:
                      type: string
                      example: バックエンドエンジニア検索
                    target:
                      type: string
                      enum:
                        - account
                        - recruitment
                        - company
                      example: recruitment
                    filters:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: クエリパラメータのキー
                            example: name
                          value:
                            description: クエリパラメータの値
                            type:
                              - string
                              - number
                              - integer
                              - boolean
                        required:
                          - key
                          - value
                  required:
                    - title
                    - target
                    - filters
                company_id:
                  type: string
                  description: どの企業で使うか
              required:
                - company_id
        description: filtersは部分的な更新ができないため、更新でも必ずすべてのフィルターを送る
  /accounts/{account_id}/applicants:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの応募一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Applicants'
      operationId: get-accounts-account_id-applicants
    post:
      summary: アカウントの応募を作成する
      operationId: post-accounts-account_id-applicants
      responses:
        '201':
          $ref: '#/components/responses/Applicant'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicant:
                  type: object
                  properties:
                    recruitment_id:
                      type: string
                      format: uuid
                  required:
                    - recruitment_id
        description: ''
  /accounts/{account_id}/work_histories:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの職歴一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/WorkHistories'
      operationId: get-accounts-account_id-work_histories
    post:
      summary: アカウントの職歴を作成する
      operationId: post-accounts-account_id-work_histories
      responses:
        '201':
          $ref: '#/components/responses/WorkHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_history:
                  type: object
                  properties:
                    is_employed:
                      type: boolean
                      description: 「在職中」「離職中」
                      example: 'true'
                      default: 'true'
                    position:
                      type: string
                      example: 主任
                    since_date:
                      type: string
                      format: date
                      example: '2019-08-01'
                    until_date:
                      format: date
                      example: '2020-05-01'
                      type: string
                    name:
                      type: string
                      example: 株式会社SIMULA Labs
                    department:
                      type: string
                      example: 開発部
                  required:
                    - is_employed
                    - position
                    - since_date
                    - name
                    - department
        description: ''
  /accounts/{account_id}/academic_histories:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの学歴一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/AcademicHistories'
      operationId: get-accounts-account_id-academic_histories
    post:
      summary: アカウントの学歴を作成する
      operationId: post-accounts-account_id-academic_histories
      responses:
        '201':
          $ref: '#/components/responses/AcademicHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academic_history:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 明治大学
                    faculty:
                      type: string
                      example: 情報コミュニケーション学部
                    since_date:
                      type: string
                      format: date
                      example: '2008-04-01'
                    until_date:
                      type: string
                      format: date
                      example: '2012-03-31'
                    type:
                      type: string
                      example: university
                      enum:
                        - graduate_school
                        - university
                        - community_college
                        - junior_college
                        - high_school
                      description: 「大学院」「大学」「専門学校」「短期大学」「高校」
                  required:
                    - name
                    - since_date
                    - until_date
                    - type
        description: ''
  /accounts/{account_id}/profile:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのプロフィールを取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Profile'
      operationId: get-accounts-account_id-profile
    post:
      summary: アカウントのプロフィールを作成する
      operationId: post-accounts-account_id-profile
      responses:
        '201':
          $ref: '#/components/responses/Profile'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: 太郎
                    last_name:
                      type: string
                      example: 山田
                    first_name_kana:
                      type: string
                      example: タロウ
                    last_name_kana:
                      type: string
                      example: ヤマダ
                    gender:
                      type: string
                      enum:
                        - MALE
                        - FEMALE
                        - OTHER
                      example: MALE
                    phone:
                      type: string
                      example: 090-XXXX-XXXX
                    nationality:
                      type: string
                      example: JP
                    place_of_residence_id:
                      type: string
                      format: uuid
                    postal_code:
                      type: string
                      example: 107-0051
                    address:
                      type: string
                      example: 東京都港区元赤坂1-7-18
                    english_skill:
                      type: string
                      description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」「なし」
                      enum:
                        - daily_conversation
                        - business_conversation
                        - native
                        - nothing
                      example: daily_conversation
                    birth_of_date:
                      type: string
                      format: date
                    biography:
                      type: string
                      example: 自己紹介
                    japanese_skill:
                      type: string
                      description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」「なし」
                      enum:
                        - daily_conversation
                        - business_conversation
                        - native
                        - nothing
                      example: native
                    recent_income_amount:
                      type: integer
                      description: 直近の年収
                    managemnt_experience:
                      type: integer
                      description: マネジメント経験人数
                    number_of_job_changes:
                      type: integer
                      description: 転職回数
                    year_of_agent_experience:
                      type: string
                      description: エージェント経験年数
                    agent_area_in_charge:
                      type: string
                      description: エージェント担当エリア
                    agent_self_message:
                      type: string
                      description: エージェント自己紹介メッセージ
                    agent_self_introduction:
                      type: string
                      description: エージェント自己PR
                    agent_achievement:
                      type: string
                      description: エージェント実績
                    marital_status:
                      type: string
                      enum:
                        - single
                        - married
                      description: 「配偶者無」「配偶者有」
                    occupation_main_category_ids:
                      type: array
                      description: エージェント得意職種
                      items:
                        type: string
                    industry_category_ids:
                      type: array
                      description: エージェント得意業種
                      items:
                        type: string
                  required:
                    - first_name
                    - last_name
    patch:
      summary: アカウントのプロフィールを更新する
      operationId: patch-accounts-account_id-profile
      responses:
        '200':
          $ref: '#/components/responses/Profile'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: 太郎
                    last_name:
                      type: string
                      example: 山田
                    first_name_kana:
                      type: string
                      example: タロウ
                    last_name_kana:
                      type: string
                      example: ヤマダ
                    gender:
                      type: string
                      enum:
                        - MALE
                        - FEMALE
                        - OTHER
                      example: MALE
                    phone:
                      type: string
                      example: 090-XXXX-XXXX
                    nationality:
                      type: string
                      example: JP
                    place_of_residence_id:
                      type: string
                      format: uuid
                    postal_code:
                      type: string
                      example: 107-0051
                    address:
                      type: string
                      example: 東京都港区元赤坂1-7-18
                    english_skill:
                      type: string
                      description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」
                      enum:
                        - daily_conversation
                        - business_conversation
                        - native
                        - nothing
                      example: daily_conversation
                    birth_of_date:
                      type: string
                    biography:
                      type: string
                      example: 自己紹介
                    job_summary:
                      type: string
                      example: 職務要約
                    japanese_skill:
                      type: string
                      description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」
                      enum:
                        - daily_conversation
                        - business_conversation
                        - native
                        - nothing
                      example: native
                    recent_income_amount:
                      type: integer
                      description: 直近の年収
                    managemnt_experience:
                      type: integer
                      description: マネジメント経験人数
                    number_of_job_changes:
                      type: integer
                      description: 転職回数
                    year_of_agent_experience:
                      type: string
                      description: エージェント経験年数
                    agent_area_in_charge:
                      type: string
                      description: エージェント担当エリア
                    agent_self_message:
                      type: string
                      description: エージェント自己紹介メッセージ
                    agent_self_introduction:
                      type: string
                      description: エージェント自己PR
                    agent_achievement:
                      type: string
                      description: エージェント実績
                    marital_status:
                      type: string
                      enum:
                        - single
                        - married
                      description: 「配偶者無」「配偶者有」
                    occupation_main_category_ids:
                      type: array
                      description: エージェント得意職種
                      items:
                        type: string
                    industry_category_ids:
                      type: array
                      description: エージェント得意業種
                      items:
                        type: string
        description: ''
  /accounts/{account_id}/profile/files:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    put:
      summary: アカウントのプロフィールにファイルを紐づける
      operationId: put-accounts-account_id-profile-files
      responses:
        '200':
          $ref: '#/components/responses/Profile'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
  /accounts/{account_id}/profile/files/{file_id}:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
      - schema:
          type: string
        name: file_id
        in: path
        required: true
    delete:
      summary: アカウントのプロフィールに紐づいたファイルを削除する
      operationId: delete-accounts-account_id-profile-files-id
      responses:
        '200':
          $ref: '#/components/responses/Profile'
  /accounts/{account_id}/profile/specialty_company_types:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: プロフィールのエージェント得意企業タイプ一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/SpecialtyCompanyTypes'
      operationId: get-accounts-account_id-profile-specialty_company_types
      description: ''
    post:
      summary: プロフィールのエージェント得意企業タイプを作成する
      operationId: post-accounts-account_id-profile-specialty_company_types
      responses:
        '200':
          $ref: '#/components/responses/SpecialtyCompanyType'
  /accounts/{account_id}/profile/specialty_positions:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: プロフィールのエージェント得意役職一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/SpecialtyPositions'
      operationId: get-accounts-account_id-profile-specialty_positions
    post:
      summary: プロフィールのエージェント得意役職を作成する
      operationId: post-accounts-account_id-profile-specialty_positions
      responses:
        '200':
          $ref: '#/components/responses/SpecialtyPosition'
  /accounts/{account_id}/employments:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの雇用一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Employments'
      operationId: get-accounts-account_id-employments
    delete:
      summary: 雇用を削除する
      operationId: delete_employments-id
      responses:
        '204':
          description: No Content
  /accounts/{account_id}/skills:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのスキル一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Skills'
      operationId: get-accounts-account_id-skills
    patch:
      summary: アカウントのスキルを更新する
      operationId: patch-accounts-account_id-skills
      responses:
        '200':
          $ref: '#/components/responses/Skills'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skill:
                  type: object
                  properties:
                    ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                  required:
                    - ids
  /accounts/{account_id}/messages:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのメッセージ一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Messages'
      operationId: get-accounts-account_id-messages
      description: queryでcompany_idを指定する
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: company_id
          required: true
  /accounts/{account_id}/income_histories:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの入金履歴一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/IncomeHistories'
      operationId: get-accounts-account_id-income_histories
  /accounts/{account_id}/withdrawals:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの出金一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Withdrawals'
      operationId: get-accounts-account_id-withdrawals
    post:
      summary: 出金を作成する
      operationId: post-accounts-account_id-withdrawals
      responses:
        '201':
          $ref: '#/components/responses/Withdrawal'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                withdrawal:
                  type: object
                  properties:
                    amount:
                      type: integer
                      description: ''
                  required:
                    - amount
  /accounts/{account_id}/withdrawal_balance:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの出金可能残高を取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: integer
                        currency:
                          type: string
                          example: jpy
                        source_types:
                          type: object
                          description: '{ bank_account: XXX } or { card: XXX }'
                      required:
                        - amount
                        - currency
                        - source_types
                  connect_reserved:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: integer
                        currency:
                          type: string
                          example: jpy
                      required:
                        - amount
                        - currency
                  livemode:
                    type: boolean
                    example: 'true'
                  object:
                    type: string
                    example: balance
                  pending:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: integer
                        currency:
                          type: string
                          example: jpy
                        source_types:
                          type: object
                          description: '{ bank_account: XXX } or { card: XXX }'
                      required:
                        - amount
                        - currency
                        - source_types
                required:
                  - available
                  - connect_reserved
                  - livemode
                  - object
                  - pending
      operationId: get-accounts-account_id-withdrawal_balance
  /accounts/{account_id}/bank_account:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの銀行口座を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/BankAccount'
      operationId: get-accounts-account_id-bank_account
    post:
      summary: アカウントの銀行口座を作成する
      operationId: post-accounts-account_id-bank_account
      responses:
        '201':
          $ref: '#/components/responses/BankAccount'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_account:
                  type: object
                  properties:
                    bank_name:
                      type: string
                      example: みずほ銀行
                    branch_name:
                      type: string
                      example: 虎ノ門支店
                    account_number:
                      type: string
                      example: '1234567'
                    account_holder_name:
                      type: string
                      example: ヤマダタロウ
                    bank_code:
                      type: string
                    branch_code:
                      type: string
                  required:
                    - bank_name
                    - branch_name
                    - account_number
                    - account_holder_name
                    - bank_code
                    - branch_code
  /accounts/{account_id}/bank_account/change:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: アカウントの銀行口座を変更する
      operationId: post-accounts-account_id-bank_account-change
      responses:
        '201':
          $ref: '#/components/responses/BankAccount'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_account:
                  type: object
                  properties:
                    bank_name:
                      type: string
                      example: みずほ銀行
                    branch_name:
                      type: string
                      example: 虎ノ門支店
                    account_number:
                      type: string
                      example: '1234567'
                    account_holder_name:
                      type: string
                      example: ヤマダタロウ
                    bank_code:
                      type: string
                    branch_code:
                      type: string
                  required:
                    - bank_name
                    - branch_name
                    - account_number
                    - account_holder_name
                    - bank_code
                    - branch_code
  /accounts/{account_id}/job_orders:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの発注一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/JobOrders'
      operationId: get-accounts-account_id-contracts
      parameters:
        - schema:
            type: string
            enum:
              - draft
              - applied
              - certificated
              - rejected
          in: query
          name: status
          description: ステータス
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
        - schema:
            type: string
          in: query
          name: recruitment_id
          description: 募集
        - schema:
            type: string
          in: query
          name: company_id
          description: 発注者
  /accounts/{account_id}/jobs:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの業務一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Jobs'
      operationId: get-accounts-account_id-works
      parameters:
        - schema:
            type: string
            enum:
              - in_progress
              - completed
          in: query
          name: status
          description: ステータス
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
        - schema:
            type: string
          in: query
          name: recruitment_id
          description: 募集
        - schema:
            type: string
          in: query
          name: company_id
          description: 発注者
      description: ''
  /accounts/{account_id}/recruitment_interests:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの気になる募集一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/RecruitmentInterests'
      operationId: get-accounts-account_id-recruitment_interests
    post:
      summary: アカウントの気になる募集を作成する
      operationId: post-accounts-account_id-recruitment_interests
      responses:
        '201':
          $ref: '#/components/responses/Recruitment'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recruitment_interest:
                  type: object
                  required:
                    - recruitment_id
                  properties:
                    recruitment_id:
                      type: string
                      format: uuid
              required:
                - recruitment_interest
  /accounts/{account_id}/support:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: キャリアサポートに申し込む
      operationId: post-accounts-account_id-support
      responses:
        '201':
          $ref: '#/components/responses/Support'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                support:
                  type: object
                  properties:
                    project:
                      type: boolean
                      example: 'true'
                    career:
                      type: boolean
                      example: 'true'
                  required:
                    - project
                    - career
    delete:
      summary: キャリアサポートを削除する
      operationId: delete-accounts-account_id-support
      responses:
        '204':
          description: No Content
    patch:
      summary: キャリアサポートを更新する
      operationId: patch-accounts-account_id-support
      responses:
        '200':
          $ref: '#/components/responses/Support'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                support:
                  type: object
                  properties:
                    project:
                      type: boolean
                      example: 'true'
                    career:
                      type: boolean
                      example: 'true'
        description: ''
    get:
      summary: キャリアサポートを取得する
      operationId: get-accounts-account_id-support
      responses:
        '200':
          $ref: '#/components/responses/Support'
  /accounts/{account_id}/project_result:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: プロジェクト実績取得
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/ProjectResult'
      operationId: get-accounts-account_id-project_results
  /accounts/{account_id}/achievements:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの実績一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Achievements'
      operationId: get-accounts-account_id-achievements
    post:
      summary: 実績を作成する
      operationId: post-accounts-account_id-achievements
      responses:
        '201':
          $ref: '#/components/responses/Achievement'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                achievement:
                  type: object
                  properties:
                    content:
                      type: string
                      example: 実績内容
                    created_date:
                      type: string
                      format: date
                    description:
                      type: string
                  required:
                    - content
                    - created_date
  /accounts/{account_id}/mark_as_read:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: 通知に既読をつける
      operationId: post-accounts-account_id-mark_as_read
      responses:
        '204':
          description: No Content
  /accounts/{account_id}/hopes:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: アカウントの希望条件を作成する（更新する）
      tags: []
      responses:
        '201':
          $ref: '#/components/responses/Hope'
      operationId: post-accounts-account_id-hopes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hope:
                  type: object
                  required:
                    - time_to_change_job
                    - amount
                    - billing_method
                    - type
                    - workplace_ids
                    - industry_ids
                    - occupation_ids
                  properties:
                    time_to_change_job:
                      type: integer
                      description: 何ヶ月以内に転職したいか
                    amount:
                      type: integer
                    billing_method:
                      type: string
                      enum:
                        - hourly
                        - daily
                        - monthly
                        - yearly
                        - with_project
                      description: 「時給」「日給」「月給」「年収」「1案件」
                    type:
                      type: string
                      enum:
                        - career
                        - project
                    special_note:
                      type: string
                    beginning_period:
                      type: integer
                    ratio_of_operation:
                      type: string
                      enum:
                        - once_a_week
                        - few_days_a_week
                        - four_days_a_week
                      description: 「~20%(週に1回)」「40~60%(週に2.3回)」「80%~(週に4回)」
                    workplace_ids:
                      type: array
                      format: uuid
                      description: StateのID
                      items:
                        type: string
                    industry_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    occupation_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
              required:
                - hope
      description: Hopeのtypeが既にある場合はupdateされて200が返る、まだない場合はcreateされて201が返る
    get:
      summary: アカウントの希望一覧を取得する
      operationId: get-accounts-account_id-hope
      responses:
        '200':
          $ref: '#/components/responses/Hopes'
  /accounts/{account_id}/industry_histories:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの経験業種一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/IndustryHistories'
      operationId: get-accounts-account_id-industry_histories
    post:
      summary: アカウントの経験業種を作成する
      operationId: post-accounts-account_id-industry_histories
      responses:
        '201':
          $ref: '#/components/responses/IndustryHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                industry_histories:
                  type: array
                  items:
                    type: object
                    properties:
                      industry_history:
                        type: object
                        properties:
                          industry_id:
                            type: string
                          year_of_experience:
                            type: integer
                        required:
                          - industry_id
                          - year_of_experience
        description: ''
  /accounts/{account_id}/occupation_histories:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの経験職種一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/OccupationHistories'
      operationId: get-accounts-account_id-occupation_histories
    post:
      summary: アカウントの経験職種を作成する
      operationId: post-accounts-account_id-occupation_histories
      responses:
        '201':
          $ref: '#/components/responses/OccupationHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                occupation_histories:
                  type: array
                  items:
                    type: object
                    properties:
                      occupation_history:
                        type: object
                        properties:
                          occupation_id:
                            type: string
                          year_of_experience:
                            type: integer
                        required:
                          - occupation_id
                          - year_of_experience
        description: ''
  /accounts/{account_id}/identification:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: 本人確認する
      operationId: get-accounts-account_id-identification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  identification_url:
                    type: string
                required:
                  - identification_url
      description: 本人確認リンクを作成し、URLを返すエンドポイント
  /accounts/{account_id}/not_agreed_consent_matters:
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの同意していない追加項目一覧を取得する
      operationId: getaccounts-account_id-agree_consent_matters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  consent_matters:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsentMatter'
      description: 'through: :not_agreed_consent_mattersして、consent_matterの一覧を取得する'
  /accounts/{account_id}/job_change_completion_reports:
    post:
      summary: 転職完了報告を作成する
      operationId: post-accounts-account_id-completion_reports
      responses:
        '201':
          $ref: '#/components/responses/JobChangeCompletionReport'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job_change_completion_report:
                  type: object
                  properties:
                    amount:
                      type: integer
                      example: 4000000
                    company_id:
                      type: string
                      format: uuid
                  required:
                    - amount
                    - company_id
        description: ''
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: 転職完了報告一覧を取得する
      operationId: get-accounts-account_id-job_change_completion_reports
      responses:
        '200':
          $ref: '#/components/responses/JobChangeCompletionReports'
  /followings/{company_id}:
    parameters:
      - schema:
          type: string
        name: company_id
        in: path
        required: true
    delete:
      summary: フォローを削除する
      operationId: delete-accounts-account_id-following-company_id
      responses:
        '204':
          description: No Content
  /recruitments:
    get:
      summary: 募集一覧（募集検索）を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Recruitments'
      operationId: get-recruitments
      parameters:
        - schema:
            type: array
            items:
              type: string
          in: query
          name: occupation_ids
          description: 職種
        - schema:
            type: array
            items:
              type: string
          in: query
          name: industry_ids
          description: 業種
        - schema:
            type: array
          in: query
          name: workplace_ids
          description: 勤務地
        - schema:
            type: array
            items:
              type: string
          in: query
          name: employment_status_ids
          description: 雇用形態
        - schema:
            type: string
          in: query
          name: type
          description: タイプ
        - schema:
            type: integer
          in: query
          name: max_yearly_amount
          description: 年収最高金額（キャリア）
        - schema:
            type: integer
          in: query
          name: min_yearly_amount
          description: 年収最低金額（キャリア）
        - schema:
            type: integer
          in: query
          name: max_unit_amount
          description: 単価最高金額（プロジェクト）
        - schema:
            type: integer
          in: query
          name: min_unit_amount
          description: 単価最低金額（プロジェクト）
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
        - schema:
            type: boolean
          in: query
          name: sort_asc_created_at
          description: trueなら昇順、falseなら降順
        - schema:
            type: boolean
          in: query
          name: sort_asc_amount
          description: trueなら昇順、falseなら降順
        - schema:
            type: boolean
          in: query
          name: sort_asc_applicant
          description: trueなら昇順、falseなら降順
        - schema:
            type: boolean
          in: query
          name: is_job_ordered
          description: 発注に紐付いた募集のみ（発注のフィルター用）
        - schema:
            type: boolean
          in: query
          name: is_jobed
          description: 業務に紐付いた募集のみ（業務のフィルター用）
        - schema:
            type: number
          in: query
          name: page
  /recruitments/recommended:
    get:
      summary: おすすめの募集一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Recruitments'
      operationId: get-recruitments-recommended
      description: 希望の職種・募集形態からおすすめの募集をいくつか取得する
  /recruitments/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 募集を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Recruitment'
      operationId: get-recruitments-id
  /rooms/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: トークルームを取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Room'
      operationId: get-accounts-account_id-rooms-id
  /rooms/{room_id}/messages:
    parameters:
      - schema:
          type: string
        name: room_id
        in: path
        required: true
    get:
      summary: ルームのメッセージ一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Messages'
      operationId: get-accounts-account_id-rooms-room_id-messages
    post:
      summary: ルームのメッセージを作成する
      operationId: post-accounts-account_id-rooms-room_id-messages
      responses:
        '201':
          $ref: '#/components/responses/Message'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
                  properties:
                    sender_id:
                      type: string
                      format: uuid
                      description: 発言するaccountのid
                    content:
                      type: string
                      example: 初めまして。XXXと申します。
                    attachment:
                      type: object
                      description: 添付ファイルのこと、つかいたかはSpecのREADME見て
                  required:
                    - sender_id
                    - content
  /rooms/{room_id}/mark_as_read:
    parameters:
      - schema:
          type: string
        name: room_id
        in: path
        required: true
    post:
      summary: メッセージ通知に既読をつける
      operationId: post-rooms-room_id-mark_as_read
      responses:
        '204':
          description: OK
  /messages/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: メッセージを取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Message'
      operationId: get-accounts-account_id-rooms-room_id-messages-id
  /content_matters:
    get:
      summary: 追加項目一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  consent_matters:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsentMatter'
      operationId: get-content_matters
  /consent_matters/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 追加項目を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentMatter'
      operationId: get-content_matters-id
  /search_conditions/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 検索条件を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/SearchCondition'
      operationId: get-search_conditions-id
    patch:
      summary: アカウントの検索条件を更新する
      operationId: patch-companies-company_id-search_conditions
      responses:
        '200':
          $ref: '#/components/responses/SearchCondition'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                search_condition:
                  type: object
                  properties:
                    title:
                      type: string
                      example: バックエンドエンジニア検索
                    target:
                      type: string
                      enum:
                        - account
                        - recruitment
                        - company
                      example: recruitment
                    filters:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: クエリパラメータのキー
                            example: name
                          value:
                            description: クエリパラメータの値
                            type:
                              - string
                              - number
                              - integer
                              - boolean
                        required:
                          - key
                          - value
                  required:
                    - filters
        description: filtersは部分的な更新ができないため、更新でも必ずすべてのフィルターを送る
    delete:
      summary: 検索条件を削除する
      operationId: delete-search_conditions-id
      responses:
        '204':
          description: No Content
  /job_change_completion_reports/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 転職完了報告を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/JobChangeCompletionReport'
      operationId: get-job_change_completion_reports-id
  /state_categories:
    get:
      summary: 都市カテゴリー一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/StateCategories'
      operationId: get-cities
    parameters: []
  /state_categories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 都市カテゴリーを取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/StateCategory'
      operationId: get-cities-id
  /work_histories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 職歴を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/WorkHistory'
      operationId: get-work_histories-id
    patch:
      summary: 職歴を更新する
      operationId: patch-work_histories-id
      responses:
        '200':
          $ref: '#/components/responses/WorkHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_history:
                  type: object
                  properties:
                    is_employed:
                      type: boolean
                      description: 「在職中」「離職中」
                      example: 'true'
                      default: 'true'
                    position:
                      type: string
                      example: 主任
                    since_date:
                      type: string
                      format: date
                      example: '2019-08-01'
                    until_date:
                      format: date
                      example: '2020-05-01'
                      type: string
                    name:
                      type: string
                      example: 株式会社SIMULA Labs
                    department:
                      type: string
    delete:
      summary: 職歴を削除する
      operationId: delete-work_histories-id
      responses:
        '204':
          description: No Content
  /work_histories/{work_history_id}/project_histories:
    parameters:
      - schema:
          type: string
        name: work_history_id
        in: path
        required: true
    get:
      summary: 職歴のプロジェクト経歴一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/ProjectHistories'
      operationId: get-work_histories-work_history_id-project_histories
    post:
      summary: 職歴のプロジェクト経歴を作成する
      operationId: post-work_histories-work_history_id-project_histories
      responses:
        '201':
          $ref: '#/components/responses/ProjectHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_history:
                  type: object
                  required:
                    - since_date
                    - is_employed
                  properties:
                    name:
                      type: string
                      example: プロジェクト名
                    position:
                      type: string
                    business_content:
                      type: string
                    since_date:
                      type: string
                      format: date
                    until_date:
                      type: string
                      format: date
                    is_employed:
                      type: boolean
              required:
                - project_history
        description: name・positionどちらかは必須
  /project_histories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: プロジェクト経歴を更新する
      operationId: patch-project_histories-id
      responses:
        '200':
          $ref: '#/components/responses/WorkHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_history:
                  type: object
                  required:
                    - since_date
                    - is_employed
                  properties:
                    name:
                      type: string
                      example: プロジェクト名
                    position:
                      type: string
                    business_content:
                      type: string
                    since_date:
                      type: string
                      format: date
                    until_date:
                      type: string
                      format: date
                    is_employed:
                      type: boolean
              required:
                - project_history
        description: name・positionどちらかは必須
    delete:
      summary: プロジェクト経歴を削除する
      operationId: delete-project_histories-id
      responses:
        '200':
          $ref: '#/components/responses/WorkHistory'
  /academic_histories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 学歴を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/AcademicHistory'
      operationId: get-academic_histories-id
    patch:
      summary: 学歴を更新する
      operationId: patch-academic_histories-id
      responses:
        '200':
          $ref: '#/components/responses/AcademicHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academic_history:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 明治大学
                    faculty:
                      type: string
                      example: 情報コミュニケーション学部
                    since_date:
                      type: string
                      format: date
                      example: '2008-04-01'
                    until_date:
                      type: string
                      format: date
                      example: '2012-03-31'
                    type:
                      type: string
                      example: university
                      enum:
                        - graduate_school
                        - university
                        - community_college
                        - junior_college
                        - high_school
                      description: 「大学院」「大学」「専門学校」「短期大学」「高校」
    delete:
      summary: 学歴を削除する
      operationId: delete-academic_histories-id
      responses:
        '204':
          description: No Content
  /not_agreed_consent_matters/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: 追加項目に同意する
      operationId: delete-not_agreed_consent_matters-id
      responses:
        '204':
          description: No Content
      description: ''
  /occupation_main_categories:
    get:
      summary: 職種一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/OccupationMainCategories'
      operationId: get-occupation_main_categories
      description: 「大項目」「中項目」「小項目」まとめて全部取得する
  /industry_categories:
    get:
      summary: 業種一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/IndustryCategories'
      operationId: get-industry_categories
      description: 業種まとめて全部取得する
  /companies:
    get:
      summary: 企業一覧取得
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Companies'
      operationId: get-companies
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
          description: 検索キーワード
        - schema:
            type: string
            enum:
              - stub
          in: query
          name: type
          description: stubを渡せばstub企業を含めた全企業一覧取得に
        - schema:
            type: boolean
          in: query
          name: is_job_ordered
          description: 発注に紐付いた募集のみ（発注のフィルター用）
        - schema:
            type: boolean
          in: query
          name: is_jobed
          description: 業務に紐付いた募集のみ（業務のフィルター用）
    post:
      summary: 企業を作成する
      operationId: post-companies
      responses:
        '201':
          $ref: '#/components/responses/Company'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 株式会社SIMULA Labs
                    name_kana:
                      type: string
                      example: 'シミュララボ '
                    head_office_location:
                      type: string
                      example: 東京都港区元赤坂1-7-18
                    year_of_establishment:
                      type: string
                      format: date
                      example: '2015'
                    hp_url:
                      type: string
                      format: uri
                      example: https://simula-labs.com/
                    phone:
                      type: string
                      example: 03-1234-5678
                    capital:
                      type: number
                      example: 1520
                    is_listed:
                      type: boolean
                      default: false
                      example: false
                    representative:
                      type: string
                      example: 牧野暉弘
                    representative_kana:
                      type: string
                      example: まきのあきひろ
                    net_sales:
                      type: string
                      example: '5000'
                    numbers_of_employees:
                      type: string
                      example: '20'
                    average_age:
                      type: integer
                      example: 28
                    business_summary:
                      type: string
                      example: 事業概要
                    corporate_pr:
                      type: string
                      maxLength: 500
                      example: >-
                        ヒトが生涯の中で最も長く過ごす「働く」という時間。
                        日本の場合、この働く時間をどう過ごすかはほとんど就活の間に決まってしまっていると言ってもいいでしょう。
                    cover:
                      type: string
                      description: 画像も投稿したい時はform-dataで投げて
                    logo:
                      type: string
                      description: 画像も投稿したい時はform-dataで投げて
                    feature_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    industry_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                  required:
                    - name
                    - name_kana
                    - head_office_location
                    - year_of_establishment
                    - capital
                    - is_listed
                    - representative
                    - representative_kana
                    - business_summary
                employment:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      example: sample@example.com
                  required:
                    - email
  /companies/recommended:
    get:
      summary: おすすめの企業一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Companies'
      operationId: get-companies-recommended
      description: 希望の職種・雇用形態からおすすめの企業をいくつか取得する
  /companies/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 企業取得
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Company'
      operationId: get-companies-id
      description: ''
  /companies/{company_id}/recruitments:
    parameters:
      - schema:
          type: string
        name: company_id
        in: path
        required: true
    get:
      summary: 企業の募集一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Recruitments'
      operationId: get-companies-company_id-recruitments
      parameters:
        - schema:
            type: string
          in: query
          name: occupation_ids[]
          description: 職種
        - schema:
            type: string
          in: query
          name: industry_ids[]
          description: 業種
        - schema:
            type: string
          in: query
          name: workplace_ids[]
          description: 勤務地
        - schema:
            type: string
          in: query
          name: employment_status_ids[]
          description: 雇用形態
        - schema:
            type: string
          in: query
          name: type
          description: タイプ
        - schema:
            type: integer
          in: query
          name: max_yearly_amount
          description: 年収最高金額（キャリア）
        - schema:
            type: integer
          in: query
          name: min_yearly_amount
          description: 年収最低金額（キャリア）
        - schema:
            type: integer
          in: query
          name: max_unit_amount
          description: 単価最高金額（プロジェクト）
        - schema:
            type: integer
          in: query
          name: min_unit_amount
          description: 単価最低金額（プロジェクト）
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
        - schema:
            type: boolean
          in: query
          name: sort_asc_created_at
          description: trueなら昇順、falseなら降順
        - schema:
            type: boolean
          in: query
          name: sort_asc_amount
          description: trueなら昇順、falseなら降順
        - schema:
            type: boolean
          in: query
          name: sort_asc_applicant
          description: trueなら昇順、falseなら降順
  /occupation_histories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 経験職種を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/OccupationHistory'
      operationId: get-occupation_histories-id
    patch:
      summary: 経験職種を更新する
      operationId: patch-occupation_histories-id
      responses:
        '200':
          $ref: '#/components/responses/OccupationHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                occupation_history:
                  type: object
                  properties:
                    year_of_experience:
                      type: integer
                      example: 5
                    occupation_id:
                      type: string
                      format: uuid
    delete:
      summary: 経験職種を削除する
      operationId: delete-occupation_histories-id
      responses:
        '204':
          description: No Content
  /industry_histories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 経験業種を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/IndustryHistory'
      operationId: get-industry_histories-id
    patch:
      summary: 経験業種を更新する
      operationId: patch-industry_histories-id
      responses:
        '200':
          $ref: '#/components/responses/IndustryHistory'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                industry_history:
                  type: object
                  properties:
                    year_of_experience:
                      type: integer
                      example: 3
                    industry_id:
                      type: string
                      format: uuid
    delete:
      summary: 経験業種を削除する
      operationId: delete-industry_histories-id
      responses:
        '204':
          description: No Content
  /hopes/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 希望条件を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Hope'
      operationId: get-hopes-id
    patch:
      summary: 希望条件を更新する
      operationId: patch-hopes-id
      responses:
        '200':
          $ref: '#/components/responses/Hope'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hope:
                  type: object
                  properties:
                    time_to_change_job:
                      type: integer
                      description: 何ヶ月以内に転職したいか
                    amount:
                      type: integer
                    billing_method:
                      type: string
                      enum:
                        - hourly
                        - monthly
                        - yearly
                      description: 「時給」「月給」「年収」
                    type:
                      type: string
                      enum:
                        - career
                        - project
                    can_moving:
                      type: boolean
                    special_note:
                      type: string
                    beginning_period:
                      type: integer
                    workplace_id:
                      type: string
                      format: uuid
                      description: StateのID
                    employment_status_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    occupation_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    ratio_of_operation:
                      type: string
                      enum:
                        - once_a_week
                        - few_days_a_week
                        - four_days_a_week
                      description: 「~20%(週に1回)」「40~60%(週に2.3回)」「80%~(週に4回)」
                  required:
                    - time_to_change_job
                    - amount
                    - type
                    - workplace_id
                    - employment_status_ids
                    - occupation_ids
    delete:
      summary: 希望条件を削除する
      operationId: delete-hopes-id
      responses:
        '204':
          description: No Content
  /nda:
    get:
      summary: NDAを取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nda'
      operationId: get-nda
  /nda/{nda_id}/consent:
    parameters:
      - schema:
          type: string
        name: nda_id
        in: path
        required: true
    post:
      summary: NDAに同意し、締結する
      operationId: post-nda-nda_id-consent
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentNda'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nda:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 山田太郎
                    address:
                      type: string
                      example: 東京都XX区XX
                  required:
                    - name
                    - address
  /employments/verify_email:
    get:
      summary: 会社用メールアドレスを認証する
      tags: []
      responses:
        '200':
          description: OK
      operationId: get-employments-verify_email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
  /employments/{employment_id}/join:
    parameters:
      - schema:
          type: string
        name: employment_id
        in: path
        required: true
    post:
      summary: 雇用とアカウントを紐付ける
      operationId: post-employments-employment_id-join
      responses:
        '204':
          description: No Content
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_token:
                  type: string
                  format: uuid
              required:
                - invite_token
  /skills:
    get:
      summary: スキル一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Skills'
      operationId: get-skills
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
          description: 検索キーワード
    post:
      summary: スキルを作成する
      operationId: post-skills
      responses:
        '201':
          $ref: '#/components/responses/Skill'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                skill:
                  type: object
                  properties:
                    name:
                      type: string
                      example: スキル名
                  required:
                    - name
  /policies:
    get:
      summary: ポリシー一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Policies'
      operationId: get-policies
  /achievements/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: 実績を更新する
      operationId: patch-achievements-id
      responses:
        '200':
          $ref: '#/components/responses/Achievement'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                achievement:
                  type: object
                  properties:
                    content:
                      type: string
                    created_date:
                      type: string
                    description:
                      type: string
    delete:
      summary: 実績を削除する
      operationId: delete-achievements-id
      responses:
        '204':
          description: No Content
  /recruitment_interests/{recruitment_id}:
    parameters:
      - schema:
          type: string
        name: recruitment_id
        in: path
        required: true
    delete:
      summary: 気になる募集を削除する
      operationId: delete-recruitment_interests-recruitment_id
      responses:
        '204':
          description: No Content
  /specialty_company_types/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: 得意企業タイプを更新する
      operationId: patch-specialty_company_types-id
      responses:
        '200':
          $ref: '#/components/responses/SpecialtyCompanyType'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                specialty_company_type:
                  type: object
                  properties:
                    content:
                      type: string
    delete:
      summary: 得意企業タイプを削除する
      operationId: delete-specialty_company_types-id
      responses:
        '204':
          description: No Content
  /specialty_positions/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    patch:
      summary: 得意役職を更新する
      operationId: patch-specialty_positions-id
      responses:
        '200':
          $ref: '#/components/responses/SpecialtyPosition'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                specialty_position:
                  type: object
                  properties:
                    content:
                      type: string
    delete:
      summary: 得意役職を削除する
      operationId: delete-specialty_positions-id
      responses:
        '204':
          description: No Content
  /job_orders/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 発注を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/JobOrder'
      operationId: get-job_orders-id
    patch:
      summary: 発注を更新する（発注を承認or拒否する）
      operationId: patch-job_orders-id
      responses:
        '200':
          $ref: '#/components/responses/JobOrder'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job_order:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - certificated
                        - rejected
                    review_comment:
                      type: string
                      description: rejectedの場合、必須
  /jobs/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 業務を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Job'
      operationId: get-jobs-id
    patch:
      summary: 業務を更新する
      operationId: patch-jobs-id
      responses:
        '200':
          $ref: '#/components/responses/Job'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  type: object
                  properties:
                    is_public:
                      type: boolean
  /jobs/{job_id}/invoices:
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
    get:
      summary: 業務の請求一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Invoices'
      operationId: get-jobs-job_id-contracts
    post:
      summary: 業務の請求書を作成する
      operationId: post-jobs-job_id-invoices
      responses:
        '201':
          $ref: '#/components/responses/Invoice'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    issued_at:
                      type: string
                      format: date
                      description: 請求日
                    title:
                      type: string
                    deadline:
                      type: string
                      description: 支払期日
                      format: date
                    files:
                      type: array
                      description: 請求書ファイル
                      items:
                        type: string
                    note:
                      type: string
                      description: 備考
                    invoice_detailed_items:
                      type: array
                      items:
                        type: object
                        properties:
                          invoice_detailed_item:
                            type: object
                            required:
                              - description
                              - quantity
                              - unit_label
                              - unit_price
                              - tax_ratio
                              - amount
                            properties:
                              description:
                                type: string
                                description: 項目名
                              quantity:
                                type: number
                                description: 数量
                              unit_label:
                                type: string
                                description: 単位
                              unit_price:
                                type: integer
                                description: 単価
                              tax_ratio:
                                description: 消費税
                                type: number
                              amount:
                                type: integer
                                description: 金額
                        required:
                          - invoice_detailed_item
                  required:
                    - issued_at
                    - title
                    - deadline
                    - invoice_detailed_items
  /jobs/{job_id}/invoices/check:
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
    post:
      summary: 請求作成前の確認レスポンスを返す
      operationId: post-jobs-job_id-invoices-check
      responses:
        '200':
          $ref: '#/components/responses/Invoice'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  required:
                    - invoice_detailed_items
                  properties:
                    invoice_detailed_items:
                      type: array
                      items:
                        type: object
                        properties:
                          invoice_detailed_item:
                            type: object
                            required:
                              - description
                              - quantity
                              - unit_label
                              - unit_price
                              - tax_ratio
                              - amount
                            properties:
                              description:
                                type: string
                                description: 項目名
                              quantity:
                                type: number
                                description: 数量
                              unit_label:
                                type: string
                                description: 単位
                              unit_price:
                                type: integer
                                description: 単価
                              tax_ratio:
                                description: 消費税
                                type: number
                              amount:
                                type: integer
                                description: 金額
                        required:
                          - invoice_detailed_item
              required:
                - invoice
  /invoices/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 請求書を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Invoice'
      operationId: get-invoices-id
  /jobs/{job_id}/job_reviews:
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
    get:
      summary: 業務のレビュー一覧を取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/JobReviews'
      operationId: get-jobs-job_id-job_reviews
  /job_reviews/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 業務レビューを取得する
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/JobReview'
      operationId: get-job_reviews-id
components:
  schemas:
    Account:
      title: Account
      type: object
      x-tags:
        - Account
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        email:
          type: string
          format: email
          example: test@example.com
        email_verification_status:
          type: string
          example: verified
          enum:
            - unspecified
            - request
            - verified
          default: unspecified
        avatar_url:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
        last_notification_read_at:
          type: string
          format: date-time
        is_career_scout_target:
          type: boolean
          default: true
          description: キャリアスカウト受け入れるか
        is_project_scout_target:
          type: boolean
          default: true
          description: プロジェクトスカウト受け入れるか
        is_public_with_work:
          type: boolean
          description: ProbWorksプロジェクト実績を公開するか
          default: true
        identity_verification_status:
          type: string
          enum:
            - unspecified
            - verified
            - checking
            - failed
          default: unspecified
        identification_requirements:
          type: array
          description: >
            本人確認に足りない項目の配列（'external_account'は銀行口座、'individual.verification.document'は身分証明書）
          items:
            type: string
        missing_requirements_for_general:
          type: array
          description: 求職者必須項目の不足項目
          items:
            type: string
        missing_requirements_for_agent:
          type: array
          description: エージェント必須項目の不足項目
          items:
            type: string
        is_sample:
          type: boolean
          default: false
          description: サンプルか
        register_as:
          type: string
          enum:
            - general
            - organizational
          example: general
        display_name:
          type: string
        deleted_at:
          type: string
          description: 論理削除時刻
          format: date-time
        is_student:
          type: boolean
          default: false
        is_concluded_nda:
          type: boolean
        is_supported:
          type: boolean
        profile_completeness:
          type: number
        exists_applicant_resource_from_current_company:
          type: boolean
        already_keep_from_current_company:
          type: boolean
      required:
        - id
        - created_at
        - updated_at
        - email_verification_status
        - is_career_scout_target
        - is_project_scout_target
        - is_public_with_work
        - identity_verification_status
        - is_sample
        - is_student
    Profile:
      title: Profile
      type: object
      x-tags:
        - Account
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        first_name:
          type: string
          example: 太郎
        last_name:
          type: string
          example: 山田
        first_name_kana:
          type: string
          example: タロウ
        last_name_kana:
          type: string
          example: ヤマダ
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
          example: MALE
        phone:
          type: string
          example: 090-XXXX-XXXX
        nationality:
          type: string
          example: JP
        postal_code:
          type: string
          example: 107-0051
        address:
          type: string
          example: 東京都港区元赤坂1-7-18
        english_skill:
          type: string
          description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」「なし」
          enum:
            - daily_conversation
            - business_conversation
            - native
            - nothing
          example: daily_conversation
        date_of_birth:
          type: string
          format: date
          description: ''
        biography:
          type: string
          example: 自己PR/職務要約
        japanese_skill:
          type: string
          description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」「なし」
          enum:
            - daily_conversation
            - business_conversation
            - native
            - nothing
          example: native
        recent_income_amount:
          type: integer
          description: 直近の年収（税の概念なし）
        management_experience:
          type: string
          description: マネジメント経験人数
          enum:
            - nothing
            - less_than_5
            - from_6_to_10
            - from_11_to_20
            - from_21_to_50
            - from_51_to_100
            - from_101_to_500
            - more_than_501
        number_of_job_changes:
          type: integer
          description: 転職回数
        academic_background:
          type: string
          example: 東京大学
        year_of_agent_experience:
          type: integer
          example: 10
        agent_area_in_charge:
          type: string
          example: 東京23区
        agent_self_message:
          type: string
          example: 紹介メッセージ
        agent_self_introduction:
          type: string
          example: 自己PR
        agent_achievement:
          type: string
          example: 経歴・実績
        marital_status:
          type: string
          enum:
            - single
            - married
        files:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              content_type:
                type: string
              url:
                type: string
              created_at:
                type: string
                format: date-time
      required:
        - id
        - created_at
        - updated_at
    SpecialtyCompanyType:
      title: SpecialtyCompanyType
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content:
          type: string
          example: 内容
      required:
        - id
        - created_at
        - updated_at
        - content
    SpecialtyPosition:
      title: SpecialtyPosition
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content:
          type: string
          example: 内容
      required:
        - id
        - created_at
        - updated_at
        - content
    OccupationMainCategory:
      title: OccupationMainCategory
      type: object
      description: 職種「大項目」
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: コンサル
      required:
        - id
        - created_at
        - updated_at
        - name
    IndustryCategory:
      title: IndustryCategory
      type: object
      description: 業種カテゴリー
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 金融・保険
      required:
        - id
        - created_at
        - updated_at
        - name
    Employment:
      title: Employment
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        email:
          type: string
          format: email
          example: sample@example.com
        department:
          type: string
          description: 所属部署
        position:
          type: string
          description: 役職
        last_notification_read_at:
          type: string
          format: date-time
        is_valid:
          type: boolean
          default: false
          description: 有効かどうか（招待しただけの状態はfalse）
      required:
        - id
        - created_at
        - updated_at
        - email
        - is_valid
    Company:
      title: Company
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - account
            - stub
          default: account
        name:
          type: string
          example: 株式会社SIMULA Labs
        name_kana:
          type: string
          example: 'シミュララボ '
        head_office_location:
          type: string
          example: 東京都港区元赤坂1-7-18
        year_of_establishment:
          type: string
          format: date
          example: '2015'
        hp_url:
          type: string
          format: uri
          example: https://simula-labs.com/
        phone:
          type: string
          example: 03-1234-5678
        capital:
          type: integer
          example: 15200000
          description: 資本金（税の概念なし）
        is_listed:
          type: boolean
          default: false
          example: false
        representative:
          type: string
          example: 牧野暉弘
        representative_kana:
          type: string
          example: まきのあきひろ
        net_sales:
          type: integer
          example: 50000000
          description: 前年度の売上高（税込）
        numbers_of_employees:
          type: string
          example: '20'
        average_age:
          type: integer
          example: 28
        business_summary:
          type: string
          example: 事業概要
        corporate_pr:
          type: string
          maxLength: 500
          example: >-
            ヒトが生涯の中で最も長く過ごす「働く」という時間。
            日本の場合、この働く時間をどう過ごすかはほとんど就活の間に決まってしまっていると言ってもいいでしょう。
        logo_url:
          type: string
        cover_image_url:
          type: string
        is_sample:
          type: boolean
        admin_verification_status:
          type: string
          enum:
            - unspecified
            - requested
            - verified
            - rejected
            - canceled
          default: unspecified
          description: admin審査状態
        public_verification_status:
          type: string
          enum:
            - unspecified
            - requested
            - verified
            - rejected
          default: unspecified
        employment_placement_permit_number:
          type: string
          description: 有料職業紹介事業許可番号
        deleted_at:
          type: string
          format: date-time
        recruitment_fee_ratio:
          type: number
          description: admin指定の採用報告手数料率
        introduction_fee_ratio:
          type: number
          description: admin指定の紹介報告手数料率
        follower_nums:
          type: integer
        owner_email:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - type
        - name
        - admin_verification_status
        - public_verification_status
    Role:
      title: Role
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: general
          description: 役割「general」「admin」など
        type:
          type: string
          enum:
            - default
            - organizational
          example: default
        description:
          type: string
          example: Roleの説明
      required:
        - id
        - created_at
        - updated_at
        - name
        - type
    Room:
      title: Room
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_read_message:
          type: boolean
          description: 未読メッセージがあればfalse
        exists_not_replied:
          type: boolean
          description: 未返信メッセージがあるか
      required:
        - id
        - created_at
        - updated_at
        - is_read_message
        - exists_not_replied
    State:
      title: State
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        country_code:
          type: number
          example: 392
          description: 国名コードの数字
        name:
          type: string
          example: 東京
      required:
        - id
        - created_at
        - updated_at
        - country_code
        - name
    Industry:
      title: Industry
      type: object
      description: 業種
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 銀行・信託銀行
      required:
        - id
        - created_at
        - updated_at
        - name
    Feature:
      title: Feature
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: フレックスタイム
        type:
          type: string
          enum:
            - default
            - organizational
          default: default
        source_type:
          type: string
          enum:
            - company
            - recruitment
      required:
        - id
        - created_at
        - updated_at
        - name
        - type
        - source_type
    Notification:
      title: AccountNotification
      type: object
      description: STIを使って実装する
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        subject:
          type: string
          example: スカウトメッセージが届きました。
        content:
          type: string
          example: XXさんからスカウトが届きました。
        url:
          type: string
        is_read:
          type: boolean
          default: false
          example: 'false'
          description: 「未読」「既読」
        notification_type:
          type: string
          enum:
            - general
            - message
          default: general
          description: 「通常通知」or「メッセージ通知」
        icon_url:
          type: string
          description: Accountであればavatar_url、Companyであればlogo_url
      required:
        - id
        - created_at
        - updated_at
        - content
        - is_read
        - notification_type
    SearchCondition:
      title: SearchCondition
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        title:
          type: string
          example: Rubyエンジニア検索
        target:
          type: string
          enum:
            - recruitment
            - company
            - account
          example: recruitment
        filters:
          type: array
          items:
            type: object
            description: ''
            properties:
              key:
                type: string
                description: クエリパラメータのキー
              value:
                description: クエリパラメータの値
                type:
                  - string
                  - number
                  - integer
                  - boolean
            required:
              - key
              - value
      required:
        - id
        - created_at
        - updated_at
        - title
        - target
        - filters
    Applicant:
      title: Applicant
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Recruitment:
      title: Recruitment
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        title:
          type: string
          example: 三度の飯よりReact！そんなGeekなあなたへ
        min_amount_without_tax:
          type: integer
          description: 最低金額（税抜）
        tax_for_min_amount:
          type: integer
          description: 最低金額（税）
        min_amount:
          type: integer
          description: 最低金額（税込）
        max_amount_without_tax:
          type: integer
          description: 最高金額（税抜）
        tax_for_max_amount:
          type: integer
          description: 最高金額（税）
        max_amount:
          type: integer
          description: 最高金額（税込）
        billing_method:
          type: string
          enum:
            - hourly
            - daily
            - monthly
            - yearly
            - with_project
          description: 「時給」「日給」「月給」「年収」「1案件」
        department:
          type: string
          example: 開発部
        position:
          type: string
          example: 管理職
        job_description:
          type: string
          example: 新規事業のフロントサイドエンジニア
        work_conditions:
          type: string
          example: 保険・交通費とか諸々
        smoking_regulation:
          type: string
          enum:
            - no_smoking_indoors
            - exist_smoking_room
            - none
            - other
          description: 「屋内禁煙」「喫煙室設置」「対策なし」「その他」
        remote_work_status:
          type: string
          enum:
            - unselected
            - rarely
            - normally
            - full_remote
          description: 「未選択」「不可・時折（0-10%）」「可（10-90%）」「フルリモート（90%以上）」
        workplace_description:
          type: string
          description: 勤務地詳細
        can_live_and_work_anywhere:
          type: boolean
          default: false
          description: 勤務地不問か
        salary_remarks:
          type: string
          description: 年収・報酬の詳細
          example: >-
            月給\416,667～（基本給\307,719～ 固定残業代\108,948～等を含む/月） ※経験とスキルに応じて決定します。
            給与改定：年1回 試用期間：3ヶ月/給与・待遇に変動なし
        qualification_requirement:
          type: string
          example: ・大卒以上　・40歳未満
        max_number_of_hiring:
          type: string
          description: 採用人数
          example: 4名
        selection_process:
          type: string
          description: 選考プロセス
          example: 面接2回、最終面接1回
        is_sample:
          type: boolean
          default: false
          description: サンプルか
        published_since_date:
          type: string
          format: date
          description: 掲載期間（開始）
        published_until_date:
          type: string
          format: date
          description: 掲載期間（終了）
        type:
          type: string
          enum:
            - career
            - project
          default: career
          description: 「転職」「副業・フリーランス」
        publishment_status:
          type: string
          enum:
            - draft
            - published
            - suspending
            - terminated
            - rejected
          description: 「下書き」「公開」「休止」「終了」「強制停止」
        accessible_type:
          type: string
          enum:
            - public
            - private
          default: public
          description: 「全体公開（誰でも見れる）」「非公開（許可した人のみ見れる）」
        source_type:
          type: string
          enum:
            - client
            - agent
            - service
          description: 「クライアント作成（企業）」「エージェント作成」「サービス作成（クローリング）」
        estimated_unit_amount:
          type: integer
          description: 推定単価（税込）
        target_company_status:
          type: string
          enum:
            - none
            - private
            - certained
            - specified
          description: 募集元企業の状態「なし」「非公開」「某社」「指定あり」
        target_company_certain_name:
          type: string
          description: target_company_statusがcertainedの時、表示名を指定
        recommended_point:
          type: string
          description: 推薦ポイント
        is_organizational_checked:
          type: boolean
          description: 企業内でのフラグ
        is_admin_checked:
          type: boolean
          description: admin用のフラグ
        can_not_release_reasons:
          type: array
          description: 公開出来ない理由
          items:
            type: string
        is_worked_with_target_account:
          type: boolean
        page_views:
          type: integer
        is_interested:
          type: boolean
        is_applied:
          type: boolean
        applied_accounts:
          type: integer
        interested_accounts:
          type: integer
      required:
        - id
        - created_at
        - updated_at
        - title
        - is_sample
    EmploymentStatus:
      title: EmploymentStatus
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 正社員
        type:
          type: string
          enum:
            - CAREER
            - PROJECT
        project_classification:
          type: string
          enum:
            - contract
            - quasi_mandate
            - outsourcing
          description: 「請負」「準委任」「業務委託」
        is_selectable:
          type: boolean
          description: 募集作成の時に選択可能か
      required:
        - id
        - created_at
        - updated_at
        - name
        - type
        - is_selectable
    Occupation:
      title: Occupation
      type: object
      description: 職種
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 戦略・経営コンサルタント
      required:
        - id
        - created_at
        - updated_at
        - name
    WorkHistory:
      title: WorkHistory
      type: object
      x-examples: {}
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 株式会社SIMULA Labs
        is_employed:
          type: boolean
          description: 「在職中」「離職中」
          example: 'true'
          default: true
        position:
          type: string
          example: 主任
        since_date:
          type: string
          format: date
          example: '2019-08-01'
        until_date:
          format: date
          example: '2020-05-01'
          type: string
        department:
          type: string
          example: 部署名
      required:
        - id
        - created_at
        - updated_at
        - name
        - is_employed
        - position
        - since_date
        - department
    ProjectHistory:
      title: ProjectHistory
      type: object
      description: 職歴に紐付くプロジェクト経歴（name・positionどちらかは必須）
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: プロジェクト名
        position:
          type: string
        business_content:
          type: string
        since_date:
          type: string
          format: date
        until_date:
          type: string
          format: date
        is_employed:
          type: boolean
      required:
        - id
        - created_at
        - updated_at
        - since_date
        - is_employed
    AcademicHistory:
      title: AcademicHistory
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 明治大学
        faculty:
          type: string
          example: 情報コミュニケーション学部
        since_date:
          type: string
          format: date
          example: '2008-04-01'
        until_date:
          type: string
          format: date
          example: '2012-03-31'
        type:
          type: string
          example: university
          enum:
            - graduate_school_doctor
            - graduate_school_master
            - university
            - technical_college
            - vocational_school
            - junior_college
            - high_school
          description: 「大学院（博士）」「大学院（修士）」「大学」「高専」「専門学校」「短期大学」「高校」
      required:
        - id
        - created_at
        - updated_at
        - name
        - since_date
        - until_date
        - type
    Subscription:
      title: Subscription
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - active
            - past_due
            - unpaid
            - canceled
            - incomplete
            - incomplete_expired
            - trialing
            - all
            - ended
            - pending
          example: active
        since_date:
          type: string
          format: date
        until_date:
          type: string
          format: date
      required:
        - id
        - created_at
        - updated_at
        - status
        - since_date
        - until_date
    Price:
      title: Price
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        active:
          type: string
        currency:
          type: string
        unit_amount_without_tax:
          type: integer
          description: 価格（税抜）
        tax_for_unit_amount:
          type: integer
          description: 価格（税）
        unit_amount:
          type: integer
          description: 価格（税込）
      required:
        - id
        - created_at
        - updated_at
        - active
        - currency
        - unit_amount
    Product:
      title: Product
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        type:
          type: string
          enum:
            - good
            - service
        plan_type:
          type: string
          enum:
            - standard
            - agent
            - starter
      required:
        - id
        - created_at
        - updated_at
        - name
        - active
        - type
    Policy:
      title: Policy
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 自社企業アカウント情報の管理
        category:
          type: string
          enum:
            - unspecified
            - account
            - applicant
            - recruitment
            - payment
      required:
        - id
        - created_at
        - updated_at
        - name
        - category
    Permission:
      title: Permission
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        action:
          type: string
          example: create:recruitment
          description: 権限「read:recruitment」「create:recruitment」など
        conditions:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - action
    Skill:
      title: Skill
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: データサイエンティスト
      required:
        - id
        - created_at
        - updated_at
        - name
    Message:
      title: Message
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content:
          type: string
          example: お世話になっております。株式会社XXXのXXXです。
        act_as:
          type: string
          enum:
            - personal
            - organizational
        attachment:
          type: object
          properties:
            filename:
              type: string
            content_type:
              type: string
            url:
              type: string
      required:
        - id
        - created_at
        - updated_at
        - content
        - act_as
    ExternalService:
      title: ExternalService
      type: object
      description: クローリングサービス
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        is_contracted:
          type: boolean
      required:
        - id
        - created_at
        - updated_at
        - name
        - is_contracted
    IncomeHistory:
      title: IncomeHistory
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 株式会社XXXより「プロジェクトXX」の入金
        amount:
          type: integer
          example: 300000
      required:
        - id
        - created_at
        - updated_at
        - name
        - amount
    Withdrawal:
      title: AccountWithdrawal
      type: object
      description: STIを使って実装する
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        amount:
          type: integer
          example: 20000
        fee_amount:
          type: integer
          example: 500
        total_amount:
          type: integer
          example: 19500
      required:
        - id
        - created_at
        - updated_at
        - amount
        - fee_amount
        - total_amount
    BankAccount:
      title: BankAccount
      type: object
      description: STIを使って実装する
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        bank_name:
          type: string
          example: みずほ銀行
        branch_name:
          type: string
          example: 虎ノ門支店
        account_number:
          type: string
          example: '1234567'
        account_holder_name:
          type: string
          example: ヤマダタロウ
        bank_code:
          type: string
          example: '0001'
        branch_code:
          type: string
          example: '046'
      required:
        - id
        - created_at
        - updated_at
        - bank_name
        - branch_name
        - account_number
        - account_holder_name
        - bank_code
        - branch_code
    JobOrder:
      title: JobOrder
      type: object
      description: appliedの場合はcustomer_name以外必須
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
          default: draft
          enum:
            - draft
            - applied
            - certificated
            - rejected
          description: 「下書き」「先方確認中」「締結済み」「却下」
        customer_name:
          type: string
          description: 取引先名
        job_name:
          type: string
          description: 業務名
        number:
          type: string
          description: 発注番号
        order_date:
          type: string
          description: 発注日
          format: date
        since_date:
          type: string
          format: date
          description: 開始日
        until_date:
          type: string
          format: date
          description: 終了日
        fee_type:
          type: string
          description: 「稼働報酬制」「固定報酬制」
          enum:
            - time_based
            - fixed
        fee_calculation_span:
          type: string
          enum:
            - monthly
            - daily
            - hourly
          description: 稼働報酬制の単位（「一月あたり」「一日あたり」「一時間あたり」）
        unit_time_fee:
          type: integer
          description: 稼働報酬制の金額
        tax_ratio:
          type: number
          description: 稼働報酬制の税率
        fixed_sub_total:
          type: integer
          description: 固定報酬制の小計
        fixed_tax:
          type: integer
          description: 固定報酬制の税額
        fixed_amount:
          type: integer
          description: 固定報酬制の金額（税込）
        fixed_total_amount:
          type: integer
          description: 固定報酬制の金額（税込）と論理手数料を合わせた総額
        job_description:
          type: string
          description: 仕事内容
        other_conditions:
          type: string
          description: 諸条件
        review_comment:
          type: string
          description: 受注者からのコメント
        logical_fee_amount:
          type: integer
          description: 論理手数料（報酬額ときっかけを元に算出する手数料の予定額）
        is_sample:
          type: boolean
      required:
        - id
        - created_at
        - updated_at
        - status
        - is_sample
    Job:
      title: Job
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
          description: 「進行中」「完了」
          enum:
            - in_progress
            - completed
          default: in_progress
        is_public:
          type: boolean
          description: 公開するか
        is_sample:
          type: boolean
      required:
        - id
        - created_at
        - updated_at
        - status
        - is_public
        - is_sample
    JobServiceItem:
      title: JobServiceItem
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          description: 項目名
        quantity:
          type: number
          description: 数量
        unit_label:
          type: string
          description: 単位
        unit_price:
          type: integer
          description: 単価
        tax_ratio:
          type: string
          description: 消費税
        amount:
          type: integer
          description: 合計金額
      required:
        - id
        - created_at
        - updated_at
        - description
        - quantity
        - unit_label
        - unit_price
        - tax_ratio
        - amount
    RecruitmentInterest:
      title: RecruitmentInterest
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Support:
      title: Support
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        project:
          type: boolean
          example: 'true'
        career:
          type: boolean
          example: 'true'
      required:
        - id
        - created_at
        - updated_at
        - project
        - career
    ProjectResult:
      title: ProjectResult
      type: object
      properties:
        total_rate:
          type: number
        total_jobs_num:
          type: integer
    JobReview:
      title: JobReview
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        star_rating:
          type: integer
        skill_description:
          type: string
          description: スキルの詳細
        improvement_point:
          type: string
          description: もっとこうして欲しかった点
        is_sample:
          type: boolean
          default: false
          description: サンプルか
      required:
        - id
        - created_at
        - updated_at
        - is_sample
    Achievement:
      title: Achievement
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content:
          type: string
          example: 実績内容
        created_date:
          type: string
          format: date
        description:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - content
        - created_date
    Hope:
      title: Hope
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        time_to_change_jobs:
          type: number
          description: 転職希望時期・案件開始時期
        amount:
          type: number
        billing_method:
          type: string
          enum:
            - hourly
            - daily
            - monthly
            - yearly
            - with_project
          description: 「時給」「日給」「月給」「年収」「1案件」
        type:
          type: string
          enum:
            - career
            - project
        special_note:
          type: string
          description: 特筆事項
        ratio_of_operation:
          type: string
          enum:
            - once_a_week
            - few_days_a_week
            - four_days_a_week
      required:
        - id
        - created_at
        - updated_at
        - billing_method
        - type
    IndustryHistory:
      title: IndustryHistory
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        year_of_experience:
          type: integer
          example: 3
          description: 年単位
      required:
        - id
        - created_at
        - updated_at
        - year_of_experience
    OccupationHistory:
      title: OccupationHistory
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        year_of_experience:
          type: integer
          example: 5
          description: 年単位
      required:
        - id
        - created_at
        - updated_at
        - year_of_experience
    ConsentMatter:
      title: ConsentMatter
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content:
          type: string
          example: 追加項目の内容
      required:
        - id
        - created_at
        - updated_at
        - content
    JobChangeCompletionReport:
      title: JobChangeCompletionReport
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        amount:
          type: integer
          description: 年収（税の概念なし）
      required:
        - id
        - created_at
        - updated_at
        - amount
    StateCategory:
      title: StateCategory
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        country_type:
          type: string
          enum:
            - JAPAN
            - INTERNATIONAL
            - OTHER
          description: 「日本」「海外」「その他」
      required:
        - id
        - created_at
        - updated_at
        - name
    OccupationSubCategory:
      title: OccupationSubCategory
      type: object
      description: 職種「中項目」
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: ビジネスコンサルタント
      required:
        - id
        - created_at
        - updated_at
        - name
    PaymentMethod:
      title: PaymentMethod
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        brand:
          type: string
          enum:
            - visa
            - mastercard
            - jcb
            - american_express
            - diners
          example: visa
        exp_month:
          type: string
          example: '8'
        exp_year:
          type: string
          example: '2023'
        last4:
          type: string
          example: '1234'
        is_default:
          type: boolean
          default: false
      required:
        - id
        - created_at
        - updated_at
        - brand
        - exp_month
        - exp_year
        - last4
        - is_default
    Nda:
      title: Nda
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        content:
          type: string
          example: NDA内容
        version:
          type: string
          example: '1.0'
      required:
        - id
        - created_at
        - updated_at
        - content
        - version
    ConsentNda:
      title: ConsentNda
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          example: 山田太郎
        address:
          type: string
          example: 東京都XX区XX
        nda_id:
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
        - address
    Invoice:
      title: Invoice
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        sub_total:
          type: integer
          example: 10000
          description: 小計
        tax:
          type: integer
          description: 税額
        amount:
          type: integer
          description: 請求額（税込）
        fee_amount:
          type: integer
          example: 2000
          description: 請求額に応じた手数料
        total_amount:
          type: integer
          example: 12000
          description: 小計・税・手数料を合わせた総額
        issued_at:
          type: string
          format: date
          description: 請求日
        status:
          type: string
          enum:
            - unpaid
            - paid
            - failed
            - pending
          description: 「未払い」「支払済み」「決済失敗」「確認中」
        title:
          type: string
        deadline:
          type: string
          description: 支払期日
          format: date
        is_sample:
          type: boolean
          default: false
          description: サンプルか
        note:
          type: string
          description: 備考
        files:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              content_type:
                type: string
              url:
                type: string
              created_at:
                type: string
                format: date-time
      required:
        - id
        - created_at
        - updated_at
        - is_sample
    InvoiceDetailedItem:
      title: InvoiceDetailedItem
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          description: 項目名
        quantity:
          description: 数量
          type: number
        unit_label:
          type: string
          description: 単位
        unit_price:
          type: integer
          description: 単価
        tax_ratio:
          type: number
          description: 消費税
        amount:
          type: integer
          description: 金額
      required:
        - id
        - created_at
        - updated_at
        - description
        - quantity
        - unit_label
        - unit_price
        - tax_ratio
        - amount
  securitySchemes: {}
  responses:
    AcademicHistory:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcademicHistory'
    AcademicHistories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              academic_histories:
                type: array
                items:
                  $ref: '#/components/schemas/AcademicHistory'
    Account:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  profile:
                    allOf:
                      - $ref: '#/components/schemas/Profile'
                      - type: object
                        properties:
                          specialty_company_types:
                            type: array
                            items:
                              $ref: '#/components/schemas/SpecialtyCompanyType'
                      - type: object
                        properties:
                          specialty_positions:
                            type: array
                            items:
                              $ref: '#/components/schemas/SpecialtyPosition'
                      - type: object
                        properties:
                          occupation_main_categories:
                            type: array
                            items:
                              $ref: '#/components/schemas/OccupationMainCategory'
                      - type: object
                        properties:
                          industry_categories:
                            type: array
                            items:
                              $ref: '#/components/schemas/IndustryCategory'
              - type: object
                properties:
                  employments:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Employment'
                        - type: object
                          properties:
                            company:
                              $ref: '#/components/schemas/Company'
                        - type: object
                          properties:
                            roles:
                              type: array
                              items:
                                $ref: '#/components/schemas/Role'
              - type: object
                properties:
                  blocked_companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Company'
    Accounts:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        profile:
                          $ref: '#/components/schemas/Profile'
                    - type: object
                      properties:
                        employments:
                          type: array
                          items:
                            $ref: '#/components/schemas/Employment'
                    - type: object
                      properties:
                        blocked_companies:
                          type: array
                          items:
                            $ref: '#/components/schemas/Company'
              total_data_nums:
                type: integer
    Achievement:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Achievement'
    Achievements:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              achievements:
                $ref: '#/components/schemas/Achievement'
              total_data_nums:
                type: integer
    Applicant:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Applicant'
              - type: object
                properties:
                  recruitment:
                    $ref: '#/components/schemas/Recruitment'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
    Applicants:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              applicants:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Applicant'
                    - type: object
                      properties:
                        recruitment:
                          allOf:
                            - $ref: '#/components/schemas/Recruitment'
                            - type: object
                              properties:
                                company:
                                  allOf:
                                    - $ref: '#/components/schemas/Company'
                                    - type: object
                                      properties:
                                        industries:
                                          type: array
                                          items:
                                            $ref: '#/components/schemas/Industry'
                            - type: object
                              properties:
                                workplace:
                                  $ref: '#/components/schemas/State'
                            - type: object
                              properties:
                                employment_status:
                                  $ref: '#/components/schemas/EmploymentStatus'
                            - type: object
                              properties:
                                occupations:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Occupation'
                            - type: object
                              properties:
                                industries:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Industry'
              total_data_nums:
                type: integer
    BankAccount:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BankAccount'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
    Company:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Company'
              - type: object
                properties:
                  owner:
                    allOf:
                      - $ref: '#/components/schemas/Account'
                      - type: object
                        properties:
                          profile:
                            allOf:
                              - $ref: '#/components/schemas/Profile'
                              - type: object
                                properties:
                                  place_of_residence:
                                    $ref: '#/components/schemas/State'
              - type: object
                properties:
                  subscription:
                    allOf:
                      - $ref: '#/components/schemas/Subscription'
                      - type: object
                        properties:
                          price:
                            allOf:
                              - $ref: '#/components/schemas/Price'
                              - type: object
                                properties:
                                  product:
                                    $ref: '#/components/schemas/Product'
              - type: object
                properties:
                  recruitments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recruitment'
              - type: object
                properties:
                  industries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Industry'
              - type: object
                properties:
                  features:
                    type: array
                    items:
                      $ref: '#/components/schemas/Feature'
              - type: object
                properties:
                  payment_methods:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethod'
    Companies:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              companies:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Company'
                    - type: object
                      properties:
                        recruitments:
                          type: array
                          items:
                            $ref: '#/components/schemas/Recruitment'
                    - type: object
                      properties:
                        industries:
                          type: array
                          items:
                            $ref: '#/components/schemas/Industry'
                    - type: object
                      properties:
                        features:
                          type: array
                          items:
                            $ref: '#/components/schemas/Feature'
              total_data_nums:
                type: integer
    Employments:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              employments:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Employment'
                    - type: object
                      properties:
                        account:
                          allOf:
                            - $ref: '#/components/schemas/Account'
                            - type: object
                              properties:
                                profile:
                                  allOf:
                                    - $ref: '#/components/schemas/Profile'
                                    - type: object
                                      properties:
                                        place_of_residence:
                                          $ref: '#/components/schemas/State'
                    - type: object
                      properties:
                        company:
                          allOf:
                            - $ref: '#/components/schemas/Company'
                            - type: object
                              properties:
                                owner:
                                  allOf:
                                    - $ref: '#/components/schemas/Account'
                                    - type: object
                                      properties:
                                        profile:
                                          allOf:
                                            - $ref: '#/components/schemas/Profile'
                                            - type: object
                                              properties:
                                                place_of_residence:
                                                  $ref: '#/components/schemas/State'
                            - type: object
                              properties:
                                subscription:
                                  allOf:
                                    - $ref: '#/components/schemas/Subscription'
                                    - type: object
                                      properties:
                                        price:
                                          allOf:
                                            - $ref: '#/components/schemas/Price'
                                            - type: object
                                              properties:
                                                product:
                                                  $ref: '#/components/schemas/Product'
                            - type: object
                              properties:
                                features:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Feature'
                            - type: object
                              properties:
                                industries:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Industry'
                    - type: object
                      properties:
                        roles:
                          type: array
                          items:
                            allOf:
                              - $ref: '#/components/schemas/Role'
                              - type: object
                                properties:
                                  policies:
                                    type: array
                                    items:
                                      allOf:
                                        - $ref: '#/components/schemas/Policy'
                                        - type: object
                                          properties:
                                            permissions:
                                              type: array
                                              items:
                                                $ref: '#/components/schemas/Permission'
    Hope:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Hope'
              - type: object
                properties:
                  industries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Industry'
              - type: object
                properties:
                  occupations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Occupation'
              - type: object
                properties:
                  workplaces:
                    type: array
                    items:
                      $ref: '#/components/schemas/State'
    Hopes:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              hopes:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Hope'
                    - type: object
                      properties:
                        industries:
                          type: array
                          items:
                            $ref: '#/components/schemas/Industry'
                    - type: object
                      properties:
                        occupations:
                          type: array
                          items:
                            $ref: '#/components/schemas/Occupation'
                    - type: object
                      properties:
                        workplaces:
                          type: array
                          items:
                            $ref: '#/components/schemas/State'
    IncomeHistories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              income_histories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/IncomeHistory'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
              total_data_nums:
                type: integer
    IndustryCategories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              industry_categories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/IndustryCategory'
                    - type: object
                      properties:
                        industries:
                          type: array
                          items:
                            $ref: '#/components/schemas/Industry'
    IndustryHistory:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/IndustryHistory'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  industry:
                    $ref: '#/components/schemas/Industry'
    IndustryHistories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              industry_histories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/IndustryHistory'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        industry:
                          $ref: '#/components/schemas/Industry'
    Invoice:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Invoice'
              - type: object
                properties:
                  job:
                    allOf:
                      - $ref: '#/components/schemas/Job'
                      - type: object
                        properties:
                          job_order:
                            $ref: '#/components/schemas/JobOrder'
              - type: object
                properties:
                  iinvoice_detailed_items:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceDetailedItem'
    Invoices:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Invoice'
              - type: object
                properties:
                  job:
                    allOf:
                      - $ref: '#/components/schemas/Job'
                      - type: object
                        properties:
                          job_order:
                            $ref: '#/components/schemas/JobOrder'
              - type: object
                properties:
                  iinvoice_detailed_items:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceDetailedItem'
    JobChangeCompletionReport:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/JobChangeCompletionReport'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
    JobChangeCompletionReports:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              job_change_completion_resports:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/JobChangeCompletionReport'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        company:
                          $ref: '#/components/schemas/Company'
    JobOrder:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/JobOrder'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  company:
                    allOf:
                      - $ref: '#/components/schemas/Company'
                      - type: object
                        properties:
                          industries:
                            type: string
                      - type: object
                        properties:
                          owner:
                            type: string
              - type: object
                properties:
                  recruitment:
                    allOf:
                      - $ref: '#/components/schemas/Recruitment'
                      - type: object
                        properties:
                          workplace:
                            $ref: '#/components/schemas/State'
                      - type: object
                        properties:
                          author:
                            $ref: '#/components/schemas/Account'
                      - type: object
                        properties:
                          external_service:
                            $ref: '#/components/schemas/ExternalService'
                      - type: object
                        properties:
                          employment_statuses:
                            type: array
                            items:
                              $ref: '#/components/schemas/EmploymentStatus'
                      - type: object
                        properties:
                          occupations:
                            type: array
                            items:
                              $ref: '#/components/schemas/Occupation'
                      - type: object
                        properties:
                          industries:
                            type: array
                            items:
                              $ref: '#/components/schemas/Industry'
                      - type: object
                        properties:
                          company:
                            $ref: '#/components/schemas/Company'
              - type: object
                properties:
                  job:
                    allOf:
                      - $ref: '#/components/schemas/Job'
                      - type: object
                        properties:
                          '':
                            $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  job_service_items:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobServiceItem'
    JobOrders:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              job_orders:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/JobOrder'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        company:
                          allOf:
                            - $ref: '#/components/schemas/Company'
                            - type: object
                              properties:
                                industries:
                                  type: string
                            - type: object
                              properties:
                                owner:
                                  type: string
                    - type: object
                      properties:
                        recruitment:
                          allOf:
                            - $ref: '#/components/schemas/Recruitment'
                            - type: object
                              properties:
                                workplace:
                                  $ref: '#/components/schemas/State'
                            - type: object
                              properties:
                                author:
                                  $ref: '#/components/schemas/Account'
                            - type: object
                              properties:
                                external_service:
                                  $ref: '#/components/schemas/ExternalService'
                            - type: object
                              properties:
                                employment_statuses:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EmploymentStatus'
                            - type: object
                              properties:
                                occupations:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Occupation'
                            - type: object
                              properties:
                                industries:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/Industry'
                            - type: object
                              properties:
                                company:
                                  $ref: '#/components/schemas/Company'
                    - type: object
                      properties:
                        job:
                          allOf:
                            - $ref: '#/components/schemas/Job'
                            - type: object
                              properties:
                                '':
                                  $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        job_service_items:
                          type: array
                          items:
                            $ref: '#/components/schemas/JobServiceItem'
              total_data_nums:
                type: integer
    JobReview:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/JobReview'
              - type: object
                properties:
                  skills:
                    type: array
                    items:
                      $ref: '#/components/schemas/Skill'
              - type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    JobReviews:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              job_reviews:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/JobReview'
                    - type: object
                      properties:
                        skills:
                          type: array
                          items:
                            $ref: '#/components/schemas/Skill'
                    - type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/Job'
              total_data_nums:
                type: integer
    Job:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Job'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  company:
                    allOf:
                      - $ref: '#/components/schemas/Company'
                      - type: object
                        properties:
                          industries:
                            type: array
                            items:
                              $ref: '#/components/schemas/Industry'
                      - type: object
                        properties:
                          owner:
                            allOf:
                              - $ref: '#/components/schemas/Account'
                              - type: object
                                properties:
                                  profile:
                                    allOf:
                                      - $ref: '#/components/schemas/Profile'
                                      - type: object
                                        properties:
                                          place_of_residence:
                                            $ref: '#/components/schemas/State'
              - type: object
                properties:
                  job_order:
                    allOf:
                      - $ref: '#/components/schemas/JobOrder'
                      - type: object
                        properties:
                          recruitment:
                            allOf:
                              - $ref: '#/components/schemas/Recruitment'
                              - type: object
                                properties:
                                  workplace:
                                    $ref: '#/components/schemas/State'
                              - type: object
                                properties:
                                  author:
                                    $ref: '#/components/schemas/Account'
                              - type: object
                                properties:
                                  employment_statuses:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/EmploymentStatus'
                              - type: object
                                properties:
                                  occupations:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/Occupation'
                              - type: object
                                properties:
                                  industries:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/Industry'
                              - type: object
                                properties:
                                  company:
                                    $ref: '#/components/schemas/Company'
                      - type: object
                        properties:
                          account:
                            $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  job_reviews:
                    type: string
              - type: object
                properties:
                  invoices:
                    type: string
    Jobs:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              jobs:
                allOf:
                  - $ref: '#/components/schemas/Job'
                  - type: object
                    properties:
                      account:
                        $ref: '#/components/schemas/Account'
                  - type: object
                    properties:
                      company:
                        allOf:
                          - $ref: '#/components/schemas/Company'
                          - type: object
                            properties:
                              industries:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Industry'
                          - type: object
                            properties:
                              owner:
                                allOf:
                                  - $ref: '#/components/schemas/Account'
                                  - type: object
                                    properties:
                                      profile:
                                        allOf:
                                          - $ref: '#/components/schemas/Profile'
                                          - type: object
                                            properties:
                                              place_of_residence:
                                                $ref: '#/components/schemas/State'
                  - type: object
                    properties:
                      job_order:
                        allOf:
                          - $ref: '#/components/schemas/JobOrder'
                          - type: object
                            properties:
                              recruitment:
                                allOf:
                                  - $ref: '#/components/schemas/Recruitment'
                                  - type: object
                                    properties:
                                      workplace:
                                        $ref: '#/components/schemas/State'
                                  - type: object
                                    properties:
                                      author:
                                        $ref: '#/components/schemas/Account'
                                  - type: object
                                    properties:
                                      employment_statuses:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/EmploymentStatus'
                                  - type: object
                                    properties:
                                      occupations:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/Occupation'
                                  - type: object
                                    properties:
                                      industries:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/Industry'
                                  - type: object
                                    properties:
                                      company:
                                        $ref: '#/components/schemas/Company'
                          - type: object
                            properties:
                              account:
                                $ref: '#/components/schemas/Account'
                  - type: object
                    properties:
                      job_reviews:
                        type: string
                  - type: object
                    properties:
                      invoices:
                        type: string
              total_data_nums:
                type: integer
    Message:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Message'
              - type: object
                properties:
                  sender:
                    allOf:
                      - $ref: '#/components/schemas/Account'
                      - type: object
                        properties:
                          profile:
                            allOf:
                              - $ref: '#/components/schemas/Profile'
                              - type: object
                                properties:
                                  place_of_residence:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/State'
                              - type: object
                                properties:
                                  specialty_company_types:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/components/schemas/SpecialtyCompanyType
                              - type: object
                                properties:
                                  specialty_positions:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/SpecialtyPosition'
                              - type: object
                                properties:
                                  occupation_main_categories:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/components/schemas/OccupationMainCategory
                              - type: object
                                properties:
                                  industry_categories:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/IndustryCategory'
              - type: object
                properties:
                  recruitment:
                    allOf:
                      - $ref: '#/components/schemas/Recruitment'
                      - type: object
                        properties:
                          workplace:
                            $ref: '#/components/schemas/State'
                      - type: object
                        properties:
                          author:
                            $ref: '#/components/schemas/Account'
                      - type: object
                        properties:
                          external_service:
                            $ref: '#/components/schemas/ExternalService'
                      - type: object
                        properties:
                          employment_statuses:
                            type: array
                            items:
                              $ref: '#/components/schemas/EmploymentStatus'
                      - type: object
                        properties:
                          occupations:
                            type: array
                            items:
                              $ref: '#/components/schemas/Occupation'
                      - type: object
                        properties:
                          industries:
                            type: array
                            items:
                              $ref: '#/components/schemas/Industry'
                      - type: object
                        properties:
                          company:
                            $ref: '#/components/schemas/Company'
              - type: object
                properties:
                  room:
                    $ref: '#/components/schemas/Room'
    Messages:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              messages:
                allOf:
                  - $ref: '#/components/schemas/Message'
                  - type: object
                    properties:
                      sender:
                        allOf:
                          - $ref: '#/components/schemas/Account'
                          - type: object
                            properties:
                              profile:
                                allOf:
                                  - $ref: '#/components/schemas/Profile'
                                  - type: object
                                    properties:
                                      place_of_residence:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/State'
                                  - type: object
                                    properties:
                                      specialty_company_types:
                                        type: array
                                        items:
                                          $ref: >-
                                            #/components/schemas/SpecialtyCompanyType
                                  - type: object
                                    properties:
                                      specialty_positions:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/SpecialtyPosition'
                                  - type: object
                                    properties:
                                      occupation_main_categories:
                                        type: array
                                        items:
                                          $ref: >-
                                            #/components/schemas/OccupationMainCategory
                                  - type: object
                                    properties:
                                      industry_categories:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/IndustryCategory'
                  - type: object
                    properties:
                      recruitment:
                        allOf:
                          - $ref: '#/components/schemas/Recruitment'
                          - type: object
                            properties:
                              workplace:
                                $ref: '#/components/schemas/State'
                          - type: object
                            properties:
                              author:
                                $ref: '#/components/schemas/Account'
                          - type: object
                            properties:
                              external_service:
                                $ref: '#/components/schemas/ExternalService'
                          - type: object
                            properties:
                              employment_statuses:
                                type: array
                                items:
                                  $ref: '#/components/schemas/EmploymentStatus'
                          - type: object
                            properties:
                              occupations:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Occupation'
                          - type: object
                            properties:
                              industries:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Industry'
                          - type: object
                            properties:
                              company:
                                $ref: '#/components/schemas/Company'
                  - type: object
                    properties:
                      room:
                        $ref: '#/components/schemas/Room'
              total_data_nums:
                type: integer
    AccountNotifications:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              account_notifications:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Notification'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        room:
                          $ref: '#/components/schemas/Room'
              total_data_nums:
                type: integer
    OccupationHistory:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/OccupationHistory'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  occupation:
                    $ref: '#/components/schemas/Occupation'
    OccupationHistories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              occupation_histories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/OccupationHistory'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        occupation:
                          $ref: '#/components/schemas/Occupation'
    OccupationMainCategories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              occupation_main_categories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/OccupationMainCategory'
                    - type: object
                      properties:
                        occupation_sub_categories:
                          type: array
                          items:
                            allOf:
                              - $ref: '#/components/schemas/OccupationSubCategory'
                              - type: object
                                properties:
                                  occupations:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/Occupation'
    Policies:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              policies:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Policy'
                    - type: object
                      properties:
                        permissions:
                          type: array
                          items:
                            $ref: '#/components/schemas/Permission'
    Profile:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Profile'
              - type: object
                properties:
                  specialty_company_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/SpecialtyCompanyType'
              - type: object
                properties:
                  specialty_positions:
                    type: array
                    items:
                      $ref: '#/components/schemas/SpecialtyPosition'
              - type: object
                properties:
                  occupation_main_categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/OccupationMainCategory'
              - type: object
                properties:
                  industry_categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/IndustryCategory'
              - type: object
                properties:
                  place_of_residence:
                    $ref: '#/components/schemas/State'
    ProjectHistory:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProjectHistory'
              - type: object
                properties:
                  work_history:
                    $ref: '#/components/schemas/WorkHistory'
    ProjectHistories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              project_histories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/ProjectHistory'
                    - type: object
                      properties:
                        work_history:
                          $ref: '#/components/schemas/WorkHistory'
              total_data_nums:
                type: integer
    ProjectResult:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ProjectResult'
              - type: object
                properties:
                  jobs:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Job'
                        - type: object
                          properties:
                            job_order:
                              allOf:
                                - $ref: '#/components/schemas/JobOrder'
                                - type: object
                                  properties:
                                    recruitment:
                                      allOf:
                                        - $ref: '#/components/schemas/Recruitment'
                                        - type: object
                                          properties:
                                            workplace:
                                              $ref: '#/components/schemas/State'
                                        - type: object
                                          properties:
                                            occpations:
                                              type: array
                                              items:
                                                $ref: '#/components/schemas/Occupation'
                                        - type: object
                                          properties:
                                            industries:
                                              type: array
                                              items:
                                                $ref: '#/components/schemas/Industry'
                        - type: object
                          properties:
                            job_reviews:
                              type: array
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/JobReview'
                                  - type: object
                                    properties:
                                      skills:
                                        type: array
                                        items:
                                          $ref: '#/components/schemas/Skill'
    RecruitmentInterests:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              recruitment_interests:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/RecruitmentInterest'
                    - type: object
                      properties:
                        recruitment:
                          $ref: '#/components/schemas/Recruitment'
              total_data_nums:
                type: integer
    Recruitment:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Recruitment'
              - type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
              - type: object
                properties:
                  workplace:
                    $ref: '#/components/schemas/State'
              - type: object
                properties:
                  author:
                    allOf:
                      - $ref: '#/components/schemas/Account'
                      - type: object
                        properties:
                          profile:
                            allOf:
                              - $ref: '#/components/schemas/Profile'
                              - type: object
                                properties:
                                  place_of_residence:
                                    $ref: '#/components/schemas/State'
                              - type: object
                                properties:
                                  specialty_company_types:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/components/schemas/SpecialtyCompanyType
                              - type: object
                                properties:
                                  specialty_positions:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/SpecialtyPosition'
                              - type: object
                                properties:
                                  occupation_main_categories:
                                    type: array
                                    items:
                                      $ref: >-
                                        #/components/schemas/OccupationMainCategory
                              - type: object
                                properties:
                                  industry_categories:
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/IndustryCategory'
              - type: object
                properties:
                  external_service:
                    $ref: '#/components/schemas/ExternalService'
              - type: object
                properties:
                  employment_statuses:
                    type: array
                    items:
                      $ref: '#/components/schemas/EmploymentStatus'
              - type: object
                properties:
                  occupations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Occupation'
              - type: object
                properties:
                  industries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Industry'
              - type: object
                properties:
                  features:
                    type: array
                    items:
                      $ref: '#/components/schemas/Feature'
    Recruitments:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              recruitments:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Recruitment'
                    - type: object
                      properties:
                        company:
                          $ref: '#/components/schemas/Company'
                    - type: object
                      properties:
                        workplace:
                          $ref: '#/components/schemas/State'
                    - type: object
                      properties:
                        author:
                          allOf:
                            - $ref: '#/components/schemas/Account'
                            - type: object
                              properties:
                                profile:
                                  allOf:
                                    - $ref: '#/components/schemas/Profile'
                                    - type: object
                                      properties:
                                        place_of_residence:
                                          $ref: '#/components/schemas/State'
                                    - type: object
                                      properties:
                                        specialty_company_types:
                                          type: array
                                          items:
                                            $ref: >-
                                              #/components/schemas/SpecialtyCompanyType
                                    - type: object
                                      properties:
                                        specialty_positions:
                                          type: array
                                          items:
                                            $ref: '#/components/schemas/SpecialtyPosition'
                                    - type: object
                                      properties:
                                        occupation_main_categories:
                                          type: array
                                          items:
                                            $ref: >-
                                              #/components/schemas/OccupationMainCategory
                                    - type: object
                                      properties:
                                        industry_categories:
                                          type: array
                                          items:
                                            $ref: '#/components/schemas/IndustryCategory'
                    - type: object
                      properties:
                        external_service:
                          $ref: '#/components/schemas/ExternalService'
                    - type: object
                      properties:
                        employment_statuses:
                          type: array
                          items:
                            $ref: '#/components/schemas/EmploymentStatus'
                    - type: object
                      properties:
                        occupations:
                          type: array
                          items:
                            $ref: '#/components/schemas/Occupation'
                    - type: object
                      properties:
                        industries:
                          type: array
                          items:
                            $ref: '#/components/schemas/Industry'
                    - type: object
                      properties:
                        features:
                          type: array
                          items:
                            $ref: '#/components/schemas/Feature'
              total_data_nums:
                type: integer
    Room:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Room'
              - type: object
                properties:
                  account:
                    allOf:
                      - $ref: '#/components/schemas/Account'
                      - type: object
                        properties:
                          profile:
                            allOf:
                              - $ref: '#/components/schemas/Profile'
                              - type: object
                                properties:
                                  place_of_residence:
                                    $ref: '#/components/schemas/State'
              - type: object
                properties:
                  company:
                    allOf:
                      - $ref: '#/components/schemas/Company'
                      - type: object
                        properties:
                          industries:
                            type: array
                            items:
                              $ref: '#/components/schemas/Industry'
                      - type: object
                        properties:
                          features:
                            type: array
                            items:
                              $ref: '#/components/schemas/Feature'
    Rooms:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              rooms:
                allOf:
                  - $ref: '#/components/schemas/Room'
                  - type: object
                    properties:
                      account:
                        allOf:
                          - $ref: '#/components/schemas/Account'
                          - type: object
                            properties:
                              profile:
                                allOf:
                                  - $ref: '#/components/schemas/Profile'
                                  - type: object
                                    properties:
                                      place_of_residence:
                                        $ref: '#/components/schemas/State'
                  - type: object
                    properties:
                      company:
                        allOf:
                          - $ref: '#/components/schemas/Company'
                          - type: object
                            properties:
                              industries:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Industry'
                          - type: object
                            properties:
                              features:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Feature'
              total_data_nums:
                type: integer
    SearchCondition:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/SearchCondition'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  company:
                    $ref: '#/components/schemas/Company'
    SearchConditions:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              search_conditions:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/SearchCondition'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        company:
                          $ref: '#/components/schemas/Company'
              total_data_nums:
                type: integer
    Skill:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Skill'
    Skills:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              skills:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
    SpecialtyCompanyType:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpecialtyCompanyType'
    SpecialtyCompanyTypes:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              specialty_company_types:
                type: array
                items:
                  $ref: '#/components/schemas/SpecialtyCompanyType'
    SpecialtyPosition:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpecialtyPosition'
    SpecialtyPositions:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              specialty_positions:
                type: array
                items:
                  $ref: '#/components/schemas/SpecialtyPosition'
    StateCategory:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/StateCategory'
              - type: object
                properties:
                  states:
                    type: array
                    items:
                      $ref: '#/components/schemas/State'
    StateCategories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              state_categories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/StateCategory'
                    - type: object
                      properties:
                        states:
                          type: array
                          items:
                            $ref: '#/components/schemas/State'
    Support:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Support'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
    WorkHistory:
      description: ''
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/WorkHistory'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
              - type: object
                properties:
                  project_histories:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectHistory'
    WorkHistories:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              work_histories:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/WorkHistory'
                    - type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/Account'
                    - type: object
                      properties:
                        project_histories:
                          type: array
                          items:
                            $ref: '#/components/schemas/ProjectHistory'
              total_data_nums:
                type: string
    Withdrawals:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              withdrawals:
                allOf:
                  - $ref: '#/components/schemas/Withdrawal'
                  - type: object
                    properties:
                      account:
                        $ref: '#/components/schemas/Account'
    Withdrawal:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Withdrawal'
              - type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
