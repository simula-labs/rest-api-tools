openapi: 3.0.0
info:
  title: Auth
  version: '1.0'
servers:
  - url: http://localhost:3000/auth/v1
    description: Local
  - url: https://api-dev.prob-works.com/auth/v1
    description: Dev
  - url: https://api-stg.prob-works.com/auth/v1
    description: Stg
  - url: https://api.prob-works.com/auth/v1
    description: Prd
paths:
  /sign_in:
    post:
      summary: Sign In
      operationId: post-sign_in
      responses:
        '200':
          $ref: '#/components/responses/SignIn'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  required:
                    - email
                    - password
                  properties:
                    email:
                      type: string
                      example: test@example.com
                      format: email
                    password:
                      type: string
                      format: password
  /sign_up:
    parameters: []
    post:
      summary: Sign Up
      operationId: post-sign_up
      responses:
        '200':
          $ref: '#/components/responses/SignUp'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    email:
                      type: string
                      example: test@example.com
                      format: email
                    password:
                      type: string
                      format: password
                  required:
                    - email
                    - password
                type:
                  type: string
                  enum:
                    - general
                    - organizational
                  description: 「求職者」or「企業」
              required:
                - type
        description: ''
  /invite_sign_up:
    post:
      summary: 招待されたEmailでサインアップする
      operationId: post-invite_sign_up
      responses:
        '200':
          $ref: '#/components/responses/InviteSignUp'
      description: |-
        招待されたEmailでサインアップし、作成されたアカウントとEmploymentを紐付ける
        ついでにProfileを作成し、Accountと紐付ける
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  required:
                    - email
                    - password
                  properties:
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                employment:
                  type: object
                  required:
                    - id
                    - invite_token
                  properties:
                    id:
                      type: string
                      format: uuid
                    invite_token:
                      type: string
                      format: uuid
                profile:
                  type: object
                  required:
                    - first_name
                    - last_name
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
              required:
                - account
                - employment
                - profile
  /verify_email:
    get:
      summary: アドレス確認する（新規登録時）
      tags: []
      operationId: get-verify_email
  /verify_new_email:
    post:
      summary: アドレス確認（新しいアドレスに変更する場合）
      operationId: post-verify_new_email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                email:
                  type: string
              required:
                - token
                - email
components:
  schemas:
    Account:
      title: Account
      type: object
      x-tags:
        - Account
      description: ''
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
          example: test@example.com
        email_verification_status:
          type: string
          example: verified
          enum:
            - unspecified
            - request
            - verified
          default: unspecified
        avatar_url:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
        last_notification_read_at:
          type: string
          format: date-time
        is_career_scout_target:
          type: boolean
          default: true
          description: キャリアスカウト受け入れるか
        is_project_scout_target:
          type: boolean
          default: true
          description: プロジェクトスカウト受け入れるか
        is_public_with_work:
          type: boolean
          description: ProbWorksプロジェクト実績を公開するか
        identity_verification_status:
          type: string
          enum:
            - unspecified
            - verified
            - checking
            - failed
          default: unspecified
        identification_requirements:
          type: array
          description: >
            本人確認に足りない項目の配列（'external_account'は銀行口座、'individual.verification.document'は身分証明書）
          items:
            type: string
        missing_requirements_for_general:
          type: array
          description: 求職者必須項目の不足項目
          items:
            type: string
        missing_requirements_for_agent:
          type: array
          description: エージェント必須項目の不足項目
          items:
            type: string
        is_sample:
          type: boolean
          default: false
          description: サンプルか
        deleted_at:
          type: string
          description: 論理削除時刻
          format: date-time
        register_as:
          type: string
          enum:
            - general
            - organizational
        is_student:
          type: boolean
          default: false
          description: 学生か
        is_concluded_nda:
          type: boolean
        is_supported:
          type: boolean
          description: 非公開サポート申請をしているか
        profile_completeness:
          type: number
          description: プロフィール完成度（%表記）
    Employment:
      title: Employment
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
          example: sample@example.com
        is_valid:
          type: boolean
          default: 'false'
          description: 有効かどうか（招待しただけの状態はfalse）
        department:
          type: string
          description: 所属部署
        position:
          type: string
          description: 役職
    Profile:
      title: Profile
      type: object
      description: ''
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
          example: 太郎
        last_name:
          type: string
          example: 山田
        first_name_kana:
          type: string
          example: タロウ
        last_name_kana:
          type: string
          example: ヤマダ
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
          example: MALE
        phone:
          type: string
          example: 9012345678
        nationality:
          type: string
          example: 日本
        postal_code:
          type: string
          example: 1070051
        address:
          type: string
          example: 東京都港区元赤坂1-7-18
        english_skill:
          type: string
          description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」「なし」
          enum:
            - daily_conversation
            - business_conversation
            - native
            - nothing
          example: daily_conversation
        date_of_birth:
          type: string
          format: date
          description: ''
        biography:
          type: string
          example: 自己PR/職務要約
        japanese_skill:
          type: string
          description: 「日常会話レベル」「ビジネス会話レベル」「ネイティブレベル」「なし」
          enum:
            - daily_conversation
            - business_conversation
            - native
            - nothing
          example: native
        recent_income_amount:
          type: integer
          description: 直近の年収（税の概念なし）
        management_experience:
          type: string
          description: マネジメント経験人数
          enum:
            - nothing
            - less_than_5
            - from_6_to_10
            - from_11_to_20
            - from_21_to_50
            - from_51_to_100
            - from_101_to_500
            - more_than_501
        number_of_job_changes:
          type: integer
          description: 転職回数
        academic_background:
          type: string
          example: 東京大学
        year_of_agent_experience:
          type: integer
          example: 10
        agent_area_in_charge:
          type: string
          example: 東京23区
        agent_self_message:
          type: string
          example: 紹介メッセージ
        agent_self_introduction:
          type: string
          example: 自己PR
        agent_achievement:
          type: string
          example: 経歴・実績
        files:
          type: object
          description: 履歴書等のPDFファイル
          properties:
            id:
              type: string
            name:
              type: string
            url:
              type: string
            content_type:
              type: string
              example: application/pdf
            created_at:
              type: string
              format: date-time
  responses:
    SignIn:
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                allOf:
                  - $ref: '#/components/schemas/Account'
                  - type: object
                    properties:
                      employments:
                        type: array
                        items:
                          $ref: '#/components/schemas/Employment'
              profile:
                $ref: '#/components/schemas/Profile'
              token:
                type: string
    SignUp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
    InviteSignUp:
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/Account'
              profile:
                $ref: '#/components/schemas/Profile'
              token:
                type: string
